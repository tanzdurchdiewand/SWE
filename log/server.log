{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T13:06:06.978Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\workspace\\\\SWE\\\\Buch\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T13:06:06.981Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-16T13:06:06.983Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T13:06:12.074Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T13:06:12.077Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T13:06:12.100Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T13:06:12.103Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-16T13:06:13.459Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-16T13:06:13.460Z"}
{"level":"error","message":"Fehler beim Start des Servers: MongoServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\n    at Timeout._onTimeout (C:\\workspace\\SWE\\Buch\\node_modules\\mongodb\\lib\\core\\sdam\\topology.js:438:30)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7) {\n  [stack]: 'MongoServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\\n' +\n    '    at Timeout._onTimeout (C:\\\\workspace\\\\SWE\\\\Buch\\\\node_modules\\\\mongodb\\\\lib\\\\core\\\\sdam\\\\topology.js:438:30)\\n' +\n    '    at listOnTimeout (node:internal/timers:557:17)\\n' +\n    '    at processTimers (node:internal/timers:500:7)',\n  [message]: 'connect ECONNREFUSED 127.0.0.1:27017',\n  name: 'MongoServerSelectionError',\n  reason: TopologyDescription {\n    type: 'Single',\n    setName: null,\n    maxSetVersion: null,\n    maxElectionId: null,\n    servers: Map(1) {\n      'localhost:27017' => ServerDescription {\n        address: 'localhost:27017',\n        error: Error: connect ECONNREFUSED 127.0.0.1:27017\n            at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1137:16) {\n          [stack]: 'Error: connect ECONNREFUSED 127.0.0.1:27017\\n' +\n            '    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1137:16)',\n          [message]: 'connect ECONNREFUSED 127.0.0.1:27017',\n          name: 'MongoNetworkError',\n          [errmsg]: [Getter],\n          [errorLabels]: [Getter]\n        },\n        roundTripTime: -1,\n        lastUpdateTime: 159110303,\n        lastWriteDate: null,\n        opTime: null,\n        type: 'Unknown',\n        topologyVersion: undefined,\n        minWireVersion: 0,\n        maxWireVersion: 0,\n        hosts: [ [length]: 0 ],\n        passives: [ [length]: 0 ],\n        arbiters: [ [length]: 0 ],\n        tags: [ [length]: 0 ],\n        [allHosts]: [Getter],\n        [isReadable]: [Getter],\n        [isDataBearing]: [Getter],\n        [isWritable]: [Getter],\n        [host]: [Getter],\n        [port]: [Getter]\n      }\n    },\n    stale: false,\n    compatible: true,\n    compatibilityError: null,\n    logicalSessionTimeoutMinutes: null,\n    heartbeatFrequencyMS: 10000,\n    localThresholdMS: 15,\n    commonWireVersion: null,\n    [options]: {\n      useUnifiedTopology: true,\n      localThresholdMS: 15,\n      serverSelectionTimeoutMS: 30000,\n      heartbeatFrequencyMS: 10000,\n      minHeartbeatFrequencyMS: 500,\n      cursorFactory: <ref *1> [class Cursor extends CoreCursor] {\n        [length]: 4,\n        [prototype]: CoreCursor {\n          [constructor]: [Circular *1],\n          [readPreference]: [Getter],\n          [sortValue]: [Getter],\n          [_initializeCursor]: [Function],\n          [hasNext]: [Function],\n          [next]: [Function],\n          [filter]: [Function],\n          [maxScan]: [Function],\n          [hint]: [Function],\n          [min]: [Function],\n          [max]: [Function],\n          [returnKey]: [Function],\n          [showRecordId]: [Function],\n          [snapshot]: [Function],\n          [setCursorOption]: [Function],\n          [addCursorFlag]: [Function],\n          [addQueryModifier]: [Function],\n          [comment]: [Function],\n          [maxAwaitTimeMS]: [Function],\n          [maxTimeMS]: [Function],\n          [project]: [Function],\n          [sort]: [Function],\n          [batchSize]: [Function],\n          [collation]: [Function],\n          [limit]: [Function],\n          [skip]: [Function],\n          [each]: [Function],\n          [forEach]: [Function],\n          [setReadPreference]: [Function],\n          [toArray]: [Function],\n          [count]: [Function],\n          [close]: [Function],\n          [map]: [Function],\n          [isClosed]: [Function],\n          [destroy]: [Function],\n          [stream]: [Function],\n          [transformStream]: [Function],\n          [explain]: [Function],\n          [getLogger]: [Function],\n          maxTimeMs: [Function],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        [name]: 'Cursor',\n        promises: [Getter]\n      },\n      reconnect: false,\n      emitError: true,\n      maxPoolSize: 10,\n      minPoolSize: 0,\n      monitorCommands: false,\n      servers: [ { host: 'localhost', port: 27017 }, [length]: 1 ],\n      authSource: 'admin',\n      caseTranslate: true,\n      useNewUrlParser: true,\n      directConnection: true,\n      checkServerIdentity: true,\n      rejectUnauthorized: true,\n      auth: { username: 'admin', password: 'p', db: 'admin', user: 'admin' },\n      dbName: 'acme',\n      socketTimeout: 0,\n      connectionTimeout: 10000,\n      retryWrites: true,\n      useRecoveryToken: true,\n      readPreference: ReadPreference {\n        mode: 'primary',\n        tags: undefined,\n        hedge: undefined,\n        preference: [Getter]\n      },\n      credentials: MongoCredentials {\n        username: 'admin',\n        password: 'p',\n        source: 'admin',\n        mechanism: 'default',\n        mechanismProperties: {}\n      },\n      promiseLibrary: <ref *2> [Function: Promise] {\n        [length]: 1,\n        [name]: 'Promise',\n        [prototype]: {\n          [constructor]: [Circular *2],\n          [then]: [Function],\n          [catch]: [Function],\n          [finally]: [Function],\n          [Symbol(Symbol.toStringTag)]: 'Promise'\n        },\n        [all]: [Function: all] { [length]: 1, [name]: 'all' },\n        [race]: [Function: race] { [length]: 1, [name]: 'race' },\n        [resolve]: [Function: resolve] { [length]: 1, [name]: 'resolve' },\n        [reject]: [Function: reject] { [length]: 1, [name]: 'reject' },\n        [allSettled]: [Function: allSettled] { [length]: 1, [name]: 'allSettled' },\n        [any]: [Function: any] { [length]: 1, [name]: 'any' },\n        [Symbol(Symbol.species)]: [Getter]\n      },\n      metadata: {\n        driver: { name: 'nodejs', version: '3.6.4' },\n        os: {\n          type: 'Windows_NT',\n          name: 'win32',\n          architecture: 'x64',\n          version: '10.0.19042'\n        },\n        platform: \"'Node.js v15.11.0, LE (unified)\"\n      },\n      compression: { compressors: [ [length]: 0 ] }\n    },\n    [error]: [Getter],\n    [hasKnownServers]: [Getter],\n    [hasDataBearingServers]: [Getter]\n  },\n  [errmsg]: [Getter],\n  [errorLabels]: [Getter]\n}","timestamp":"2021-04-16T13:06:43.514Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T13:21:59.670Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\workspace\\\\SWE\\\\Buch\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T13:21:59.672Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-16T13:21:59.673Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T13:22:03.671Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T13:22:03.675Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T13:22:03.701Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T13:22:03.705Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-16T13:22:04.580Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-16T13:22:04.581Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-16T13:22:04.712Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-16T13:22:04.714Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-16T13:22:04.723Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-16T13:22:04.755Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-16T13:22:04.773Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-16T13:22:04.776Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-16T13:22:04.836Z"}
{"message":"\n\n.       __                                    _____\n.      / /_  _____  _________ ____  ____     /__  /\n. __  / / / / / _ \\/ ___/ __ `/ _ \\/ __ \\      / /\n./ /_/ / /_/ /  __/ /  / /_/ /  __/ / / /     / /___\n.\\____/\\__,_/\\___/_/   \\__, /\\___/_/ /_/     /____(_)\n.                     /____/\n\n    ","level":"info","timestamp":"2021-04-16T13:22:04.877Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-16T13:22:04.881Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19042","timestamp":"2021-04-16T13:22:04.882Z"}
{"level":"info","message":"Rechnername:    NOTEBOOKTOBIAS","timestamp":"2021-04-16T13:22:04.883Z"}
{"level":"info","message":"IP-Adresse:     26.62.32.167","timestamp":"2021-04-16T13:22:04.896Z"}
{"level":"info","message":"Username:       _SU","timestamp":"2021-04-16T13:22:04.902Z"}
{"message":"","level":"info","timestamp":"2021-04-16T13:22:04.903Z"}
{"level":"info","message":"https://NOTEBOOKTOBIAS:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-16T13:22:04.904Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-16T13:23:23.778Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-16T13:23:23.778Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-16T13:23:23.778Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-16T13:23:23.778Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-16T13:23:23.815Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-16T13:23:23.881Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTg1Nzk0MDMsImV4cCI6MTYxODY2NTgwMywiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiY2IwNTcwM2UtMmQwMC00ZjYwLWI2ZGItOTFkNWQ2NDBmY2Q4In0.F7QSFDRk_7La3oBKhqb6Gm5PNRO6lmr9qKU9uHEAi8aryOlf_SJqUc7yiqVc1Jbs0o21aqDfuNKGHIOjpHtltTye103N1OM2fG2uQ412P8MicfwZipMktYev4-Je5JAqxK79tbIEGYBOUWj8Jpsk7mBkwAVZuA-jlJU2VYtFYK8IFkOmBmKWxNqO9a_mQaDSK-Ws56jID9tbeB2Jnu6Ns4gZJm85zkbwgU53-sJZvx3TcWFS6Q0VFaNIqosGlWPE-WKMW15bGzKE8WLm7X1oNbGnmM9Oo7LbKQLAjEmmXR_ChJhZ0ldBGUT7OwVkhvhWULPZcM4o9IQ385rfZcD-sw',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-16T13:23:23.885Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTg1Nzk0MDMsImV4cCI6MTYxODY2NTgwMywiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiY2IwNTcwM2UtMmQwMC00ZjYwLWI2ZGItOTFkNWQ2NDBmY2Q4In0.F7QSFDRk_7La3oBKhqb6Gm5PNRO6lmr9qKU9uHEAi8aryOlf_SJqUc7yiqVc1Jbs0o21aqDfuNKGHIOjpHtltTye103N1OM2fG2uQ412P8MicfwZipMktYev4-Je5JAqxK79tbIEGYBOUWj8Jpsk7mBkwAVZuA-jlJU2VYtFYK8IFkOmBmKWxNqO9a_mQaDSK-Ws56jID9tbeB2Jnu6Ns4gZJm85zkbwgU53-sJZvx3TcWFS6Q0VFaNIqosGlWPE-WKMW15bGzKE8WLm7X1oNbGnmM9Oo7LbKQLAjEmmXR_ChJhZ0ldBGUT7OwVkhvhWULPZcM4o9IQ385rfZcD-sw',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-16T13:23:23.885Z"}
{"level":"debug","message":"Response time: 109.32929999999999 ms","timestamp":"2021-04-16T13:23:23.889Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-16T13:23:40.488Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-16T13:23:40.488Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-16T13:23:40.488Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-16T13:23:40.488Z"}
{"level":"debug","message":"BuchRequestHandler.find(): queryParams={}","timestamp":"2021-04-16T13:23:40.490Z"}
{"level":"debug","message":"BuchService.find(): query={}","timestamp":"2021-04-16T13:23:40.490Z"}
{"message":"BuchService.find(): alle Buecher","level":"debug","timestamp":"2021-04-16T13:23:40.491Z"}
{"level":"debug","message":"BuchRequestHandler.find(): buecher=[\n  {\n    _id: '00000000-0000-0000-0000-000000000001',\n    titel: 'Alpha',\n    rating: 4,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 11.1,\n    rabatt: 0.011,\n    lieferbar: true,\n    datum: 2020-02-01T00:00:00.000Z,\n    isbn: '978-3897225831',\n    homepage: 'https://acme.at/',\n    schlagwoerter: [ 'JAVASCRIPT', [length]: 1 ],\n    autoren: [\n      { nachname: 'Alpha', vorname: 'Adriana' },\n      { nachname: 'Alpha', vorname: 'Alfred' },\n      [length]: 2\n    ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000002',\n    titel: 'Beta',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'BAR_VERLAG',\n    preis: 22.2,\n    rabatt: 0.022,\n    lieferbar: true,\n    datum: 2020-02-02T00:00:00.000Z,\n    isbn: '978-3827315526',\n    homepage: 'https://acme.biz/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Beta', vorname: 'Brunhilde' }, [length]: 1 ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000004',\n    titel: 'Delta',\n    rating: 3,\n    art: 'DRUCKAUSGABE',\n    verlag: 'BAR_VERLAG',\n    preis: 44.4,\n    rabatt: 0.044,\n    lieferbar: true,\n    datum: 2020-02-04T00:00:00.000Z,\n    isbn: '978-0387534046',\n    homepage: 'https://acme.de/',\n    schlagwoerter: [ [length]: 0 ],\n    autoren: [ { nachname: 'Delta', vorname: 'Dieter' }, [length]: 1 ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000005',\n    titel: 'Epsilon',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'FOO_VERLAG',\n    preis: 55.5,\n    rabatt: 0.055,\n    lieferbar: true,\n    datum: 2020-02-05T00:00:00.000Z,\n    isbn: '978-3824404810',\n    homepage: 'https://acme.es/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Epsilon', vorname: 'Elfriede' }, [length]: 1 ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000003',\n    titel: 'Gamma',\n    rating: 1,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 33.3,\n    rabatt: 0.033,\n    lieferbar: true,\n    datum: 2020-02-03T00:00:00.000Z,\n    isbn: '978-0201633610',\n    homepage: 'https://acme.com/',\n    schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n    autoren: [ { nachname: 'Gamma', vorname: 'Claus' }, [length]: 1 ],\n    __v: 0\n  },\n  [length]: 5\n]","timestamp":"2021-04-16T13:23:40.511Z"}
{"level":"debug","message":"BuchRequestHandler.find(): buecher=[\n  {\n    titel: 'Alpha',\n    rating: 4,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 11.1,\n    rabatt: 0.011,\n    lieferbar: true,\n    datum: 2020-02-01T00:00:00.000Z,\n    isbn: '978-3897225831',\n    homepage: 'https://acme.at/',\n    schlagwoerter: [ 'JAVASCRIPT', [length]: 1 ],\n    autoren: [\n      { nachname: 'Alpha', vorname: 'Adriana' },\n      { nachname: 'Alpha', vorname: 'Alfred' },\n      [length]: 2\n    ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000001'\n      }\n    }\n  },\n  {\n    titel: 'Beta',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'BAR_VERLAG',\n    preis: 22.2,\n    rabatt: 0.022,\n    lieferbar: true,\n    datum: 2020-02-02T00:00:00.000Z,\n    isbn: '978-3827315526',\n    homepage: 'https://acme.biz/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Beta', vorname: 'Brunhilde' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000002'\n      }\n    }\n  },\n  {\n    titel: 'Delta',\n    rating: 3,\n    art: 'DRUCKAUSGABE',\n    verlag: 'BAR_VERLAG',\n    preis: 44.4,\n    rabatt: 0.044,\n    lieferbar: true,\n    datum: 2020-02-04T00:00:00.000Z,\n    isbn: '978-0387534046',\n    homepage: 'https://acme.de/',\n    schlagwoerter: [ [length]: 0 ],\n    autoren: [ { nachname: 'Delta', vorname: 'Dieter' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000004'\n      }\n    }\n  },\n  {\n    titel: 'Epsilon',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'FOO_VERLAG',\n    preis: 55.5,\n    rabatt: 0.055,\n    lieferbar: true,\n    datum: 2020-02-05T00:00:00.000Z,\n    isbn: '978-3824404810',\n    homepage: 'https://acme.es/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Epsilon', vorname: 'Elfriede' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000005'\n      }\n    }\n  },\n  {\n    titel: 'Gamma',\n    rating: 1,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 33.3,\n    rabatt: 0.033,\n    lieferbar: true,\n    datum: 2020-02-03T00:00:00.000Z,\n    isbn: '978-0201633610',\n    homepage: 'https://acme.com/',\n    schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n    autoren: [ { nachname: 'Gamma', vorname: 'Claus' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000003'\n      }\n    }\n  },\n  [length]: 5\n]","timestamp":"2021-04-16T13:23:40.512Z"}
{"level":"debug","message":"Response time: 32.5497 ms","timestamp":"2021-04-16T13:23:40.521Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-16T13:24:16.114Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-16T13:24:16.115Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-16T13:24:16.115Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-16T13:24:16.115Z"}
{"message":"SharedRequestHandler.validateUUID(): isUUID","level":"debug","timestamp":"2021-04-16T13:24:16.117Z"}
{"level":"debug","message":"BuchRequestHandler.findById(): versionHeader=undefined","timestamp":"2021-04-16T13:24:16.117Z"}
{"level":"debug","message":"BuchRequestHandler.findById(): id=00000000-0000-0000-0000-000000000001","timestamp":"2021-04-16T13:24:16.117Z"}
{"level":"debug","message":"BuchService.findById(): id=00000000-0000-0000-0000-000000000001","timestamp":"2021-04-16T13:24:16.117Z"}
{"level":"debug","message":"BuchService.findById(): buch={\n  _id: '00000000-0000-0000-0000-000000000001',\n  titel: 'Alpha',\n  rating: 4,\n  art: 'DRUCKAUSGABE',\n  verlag: 'FOO_VERLAG',\n  preis: 11.1,\n  rabatt: 0.011,\n  lieferbar: true,\n  datum: 2020-02-01T00:00:00.000Z,\n  isbn: '978-3897225831',\n  homepage: 'https://acme.at/',\n  schlagwoerter: [ 'JAVASCRIPT', [length]: 1 ],\n  autoren: [\n    { nachname: 'Alpha', vorname: 'Adriana' },\n    { nachname: 'Alpha', vorname: 'Alfred' },\n    [length]: 2\n  ],\n  __v: 0,\n  createdAt: 2021-04-16T13:21:59.775Z,\n  updatedAt: 2021-04-16T13:21:59.775Z\n}","timestamp":"2021-04-16T13:24:16.125Z"}
{"level":"debug","message":"BuchRequestHandler.findById(): buch={\n  _id: '00000000-0000-0000-0000-000000000001',\n  titel: 'Alpha',\n  rating: 4,\n  art: 'DRUCKAUSGABE',\n  verlag: 'FOO_VERLAG',\n  preis: 11.1,\n  rabatt: 0.011,\n  lieferbar: true,\n  datum: 2020-02-01T00:00:00.000Z,\n  isbn: '978-3897225831',\n  homepage: 'https://acme.at/',\n  schlagwoerter: [ 'JAVASCRIPT', [length]: 1 ],\n  autoren: [\n    { nachname: 'Alpha', vorname: 'Adriana' },\n    { nachname: 'Alpha', vorname: 'Alfred' },\n    [length]: 2\n  ],\n  __v: 0\n}","timestamp":"2021-04-16T13:24:16.126Z"}
{"level":"debug","message":"BuchRequestHandler.findById(): VersionDb=0","timestamp":"2021-04-16T13:24:16.126Z"}
{"level":"debug","message":"Response time: 11.266399999999999 ms","timestamp":"2021-04-16T13:24:16.127Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-16T13:25:12.884Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-16T13:25:12.884Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-16T13:25:12.884Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-16T13:25:12.884Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-16T13:25:12.886Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-16T13:25:12.953Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTg1Nzk1MTIsImV4cCI6MTYxODY2NTkxMiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZjc1ZDQyOTYtZTAxOS00MTQxLTkxN2QtZTk4YmVhM2QyZjI5In0.lS5lq85RFp3prPibH8hwme9w0Nkff-8GhdFgkmAiX8VR9C2-H2Qv2jpjrfVbFg20MdIUrYeDclqlconT_afN5N2wRUxmkeW0JmTkNVL6XUeWVmCUZAYRLhCUkMh7u2aVo1Da3eDIhdHaLAnsD3uZehU8ptN7NQ4C2fiuBgobzo9Apw3iKwkPw6DJ1ekIwBW4NOv-RpJR1eqcKQwi2d6s0MeYPEetRrLIjPJEaAxjw9qFWMOeQ1Chs237LF0cuk44d771CV5u5eBnkJqv83VXctYqk1rAWf18R7VuW5J51PAI-z6IcpmlCzHFLiSgdAUKvx_pWZrm1MpXQtmTtNwT7Q',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-16T13:25:12.955Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTg1Nzk1MTIsImV4cCI6MTYxODY2NTkxMiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZjc1ZDQyOTYtZTAxOS00MTQxLTkxN2QtZTk4YmVhM2QyZjI5In0.lS5lq85RFp3prPibH8hwme9w0Nkff-8GhdFgkmAiX8VR9C2-H2Qv2jpjrfVbFg20MdIUrYeDclqlconT_afN5N2wRUxmkeW0JmTkNVL6XUeWVmCUZAYRLhCUkMh7u2aVo1Da3eDIhdHaLAnsD3uZehU8ptN7NQ4C2fiuBgobzo9Apw3iKwkPw6DJ1ekIwBW4NOv-RpJR1eqcKQwi2d6s0MeYPEetRrLIjPJEaAxjw9qFWMOeQ1Chs237LF0cuk44d771CV5u5eBnkJqv83VXctYqk1rAWf18R7VuW5J51PAI-z6IcpmlCzHFLiSgdAUKvx_pWZrm1MpXQtmTtNwT7Q',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-16T13:25:12.955Z"}
{"level":"debug","message":"Response time: 70.4862 ms","timestamp":"2021-04-16T13:25:12.955Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/json',\n  authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTg1Nzk1MTIsImV4cCI6MTYxODY2NTkxMiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZjc1ZDQyOTYtZTAxOS00MTQxLTkxN2QtZTk4YmVhM2QyZjI5In0.lS5lq85RFp3prPibH8hwme9w0Nkff-8GhdFgkmAiX8VR9C2-H2Qv2jpjrfVbFg20MdIUrYeDclqlconT_afN5N2wRUxmkeW0JmTkNVL6XUeWVmCUZAYRLhCUkMh7u2aVo1Da3eDIhdHaLAnsD3uZehU8ptN7NQ4C2fiuBgobzo9Apw3iKwkPw6DJ1ekIwBW4NOv-RpJR1eqcKQwi2d6s0MeYPEetRrLIjPJEaAxjw9qFWMOeQ1Chs237LF0cuk44d771CV5u5eBnkJqv83VXctYqk1rAWf18R7VuW5J51PAI-z6IcpmlCzHFLiSgdAUKvx_pWZrm1MpXQtmTtNwT7Q',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '366',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-16T13:25:21.098Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-16T13:25:21.098Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-16T13:25:21.098Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-16T13:25:21.098Z"}
{"level":"debug","message":"AuthService.validateJwt(): Der JWT-Token wurde decodiert: {\n  iat: 1618579512,\n  exp: 1618665912,\n  iss: 'https://acme.com/shop/JuergenZimmermann',\n  sub: '20000000-0000-0000-0000-000000000001',\n  jti: 'f75d4296-e019-4141-917d-e98bea3d2f29'\n}","timestamp":"2021-04-16T13:25:21.101Z"}
{"level":"debug","message":"AuthService.validateJwt(): sub=20000000-0000-0000-0000-000000000001","timestamp":"2021-04-16T13:25:21.102Z"}
{"message":"AuthRequestHandler.validateJwt(): ok","level":"debug","timestamp":"2021-04-16T13:25:21.102Z"}
{"level":"debug","message":"Rollen = [ 'admin', 'mitarbeiter', [length]: 2 ]","timestamp":"2021-04-16T13:25:21.102Z"}
{"level":"debug","message":"RolesService.getNormalizedRoles(): [ 'admin', 'mitarbeiter', [length]: 2 ]","timestamp":"2021-04-16T13:25:21.103Z"}
{"level":"debug","message":"AuthService.hasAnyRole(): true","timestamp":"2021-04-16T13:25:21.103Z"}
{"message":"AuthRequestHandler.hasRolle(): ok","level":"debug","timestamp":"2021-04-16T13:25:21.103Z"}
{"message":"AuthRequestHandler.isAdminMitarbeiter(): ok","level":"debug","timestamp":"2021-04-16T13:25:21.103Z"}
{"message":"SharedRequestHandler.validateContentType(): ok","level":"debug","timestamp":"2021-04-16T13:25:21.105Z"}
{"level":"debug","message":"BuchRequestHandler.create(): buch={\n  titel: 'Test',\n  rating: 1,\n  art: 'KINDLE',\n  verlag: 'FOO_VERLAG',\n  preis: 99.9,\n  rabatt: 1,\n  lieferbar: true,\n  datum: '2020-02-01T00:00:00.000Z',\n  isbn: '0-0070-0644-6',\n  homepage: 'https://test.de/',\n  schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n  autoren: [ { vorname: 'Theo', nachname: 'Test' }, [length]: 1 ]\n}","timestamp":"2021-04-16T13:25:21.107Z"}
{"level":"debug","message":"BuchService.create(): buch={\n  titel: 'Test',\n  rating: 1,\n  art: 'KINDLE',\n  verlag: 'FOO_VERLAG',\n  preis: 99.9,\n  rabatt: 1,\n  lieferbar: true,\n  datum: '2020-02-01T00:00:00.000Z',\n  isbn: '0-0070-0644-6',\n  homepage: 'https://test.de/',\n  schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n  autoren: [ { vorname: 'Theo', nachname: 'Test' }, [length]: 1 ]\n}","timestamp":"2021-04-16T13:25:21.107Z"}
{"level":"debug","message":"validateBuch: errors=[\n  {\n    keyword: 'errorMessage',\n    dataPath: '/rabatt',\n    schemaPath: '#/errorMessage',\n    params: {\n      errors: [\n        {\n          keyword: 'exclusiveMaximum',\n          dataPath: '/rabatt',\n          schemaPath: '#/properties/rabatt/exclusiveMaximum',\n          params: [Object],\n          message: 'should be < 1',\n          emUsed: true\n        },\n        [length]: 1\n      ]\n    },\n    message: 'Der Rabatt muss ein Wert zwischen 0 und 1 sein.'\n  },\n  {\n    keyword: 'errorMessage',\n    dataPath: '/datum',\n    schemaPath: '#/errorMessage',\n    params: {\n      errors: [\n        {\n          keyword: 'format',\n          dataPath: '/datum',\n          schemaPath: '#/properties/datum/format',\n          params: [Object],\n          message: 'should match format \"date\"',\n          emUsed: true\n        },\n        [length]: 1\n      ]\n    },\n    message: 'Das Datum muss im Format yyyy-MM-dd sein.'\n  },\n  [length]: 2\n]","timestamp":"2021-04-16T13:25:21.131Z"}
{"level":"debug","message":"validateBuch: errorMsg={\n  rabatt: 'Der Rabatt muss ein Wert zwischen 0 und 1 sein.',\n  datum: 'Das Datum muss im Format yyyy-MM-dd sein.'\n}","timestamp":"2021-04-16T13:25:21.132Z"}
{"level":"debug","message":"BuchService.validateCreate(): Validation Message: {\n  rabatt: 'Der Rabatt muss ein Wert zwischen 0 und 1 sein.',\n  datum: 'Das Datum muss im Format yyyy-MM-dd sein.'\n}","timestamp":"2021-04-16T13:25:21.133Z"}
{"level":"debug","message":"BuchRequestHandler.handleValidationError(): msg={\n  rabatt: 'Der Rabatt muss ein Wert zwischen 0 und 1 sein.',\n  datum: 'Das Datum muss im Format yyyy-MM-dd sein.'\n}","timestamp":"2021-04-16T13:25:21.133Z"}
{"level":"debug","message":"Response time: 34.2816 ms","timestamp":"2021-04-16T13:25:21.133Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/json',\n  authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTg1Nzk1MTIsImV4cCI6MTYxODY2NTkxMiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZjc1ZDQyOTYtZTAxOS00MTQxLTkxN2QtZTk4YmVhM2QyZjI5In0.lS5lq85RFp3prPibH8hwme9w0Nkff-8GhdFgkmAiX8VR9C2-H2Qv2jpjrfVbFg20MdIUrYeDclqlconT_afN5N2wRUxmkeW0JmTkNVL6XUeWVmCUZAYRLhCUkMh7u2aVo1Da3eDIhdHaLAnsD3uZehU8ptN7NQ4C2fiuBgobzo9Apw3iKwkPw6DJ1ekIwBW4NOv-RpJR1eqcKQwi2d6s0MeYPEetRrLIjPJEaAxjw9qFWMOeQ1Chs237LF0cuk44d771CV5u5eBnkJqv83VXctYqk1rAWf18R7VuW5J51PAI-z6IcpmlCzHFLiSgdAUKvx_pWZrm1MpXQtmTtNwT7Q',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '354',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-16T13:26:07.705Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-16T13:26:07.705Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-16T13:26:07.705Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-16T13:26:07.705Z"}
{"level":"debug","message":"AuthService.validateJwt(): Der JWT-Token wurde decodiert: {\n  iat: 1618579512,\n  exp: 1618665912,\n  iss: 'https://acme.com/shop/JuergenZimmermann',\n  sub: '20000000-0000-0000-0000-000000000001',\n  jti: 'f75d4296-e019-4141-917d-e98bea3d2f29'\n}","timestamp":"2021-04-16T13:26:07.708Z"}
{"level":"debug","message":"AuthService.validateJwt(): sub=20000000-0000-0000-0000-000000000001","timestamp":"2021-04-16T13:26:07.708Z"}
{"message":"AuthRequestHandler.validateJwt(): ok","level":"debug","timestamp":"2021-04-16T13:26:07.709Z"}
{"level":"debug","message":"Rollen = [ 'admin', 'mitarbeiter', [length]: 2 ]","timestamp":"2021-04-16T13:26:07.709Z"}
{"level":"debug","message":"RolesService.getNormalizedRoles(): [ 'admin', 'mitarbeiter', [length]: 2 ]","timestamp":"2021-04-16T13:26:07.709Z"}
{"level":"debug","message":"AuthService.hasAnyRole(): true","timestamp":"2021-04-16T13:26:07.710Z"}
{"message":"AuthRequestHandler.hasRolle(): ok","level":"debug","timestamp":"2021-04-16T13:26:07.710Z"}
{"message":"AuthRequestHandler.isAdminMitarbeiter(): ok","level":"debug","timestamp":"2021-04-16T13:26:07.710Z"}
{"message":"SharedRequestHandler.validateContentType(): ok","level":"debug","timestamp":"2021-04-16T13:26:07.710Z"}
{"level":"debug","message":"BuchRequestHandler.create(): buch={\n  titel: 'Test',\n  rating: 1,\n  art: 'KINDLE',\n  verlag: 'FOO_VERLAG',\n  preis: 99.9,\n  rabatt: 0.5,\n  lieferbar: true,\n  datum: '2020-02-01',\n  isbn: '0-0070-0644-6',\n  homepage: 'https://test.de/',\n  schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n  autoren: [ { vorname: 'Theo', nachname: 'Test' }, [length]: 1 ]\n}","timestamp":"2021-04-16T13:26:07.711Z"}
{"level":"debug","message":"BuchService.create(): buch={\n  titel: 'Test',\n  rating: 1,\n  art: 'KINDLE',\n  verlag: 'FOO_VERLAG',\n  preis: 99.9,\n  rabatt: 0.5,\n  lieferbar: true,\n  datum: '2020-02-01',\n  isbn: '0-0070-0644-6',\n  homepage: 'https://test.de/',\n  schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n  autoren: [ { vorname: 'Theo', nachname: 'Test' }, [length]: 1 ]\n}","timestamp":"2021-04-16T13:26:07.712Z"}
{"level":"debug","message":"validateBuch: errors=[ [length]: 0 ]","timestamp":"2021-04-16T13:26:07.715Z"}
{"level":"debug","message":"validateBuch: errorMsg={}","timestamp":"2021-04-16T13:26:07.716Z"}
{"message":"BuchService.validateCreate(): ok","level":"debug","timestamp":"2021-04-16T13:26:07.738Z"}
{"level":"debug","message":"BuchService.create(): id=3dce4777-9f37-4c69-9f60-5ddcc56badb9","timestamp":"2021-04-16T13:26:07.769Z"}
{"level":"debug","message":"sendMail(): data={\n  from: '\"Joe Doe\" <Joe.Doe@acme.com>',\n  to: '\"Foo Bar\" <Foo.Bar@acme.com>',\n  subject: 'Neues Buch undefined',\n  html: 'Das Buch mit dem Titel <strong>Test</strong> ist angelegt'\n}","timestamp":"2021-04-16T13:26:07.769Z"}
{"level":"debug","message":"BuchRequestHandler.create(): location=https://localhost:3000/api/buecher/3dce4777-9f37-4c69-9f60-5ddcc56badb9","timestamp":"2021-04-16T13:26:09.775Z"}
{"level":"debug","message":"Response time: 2069.3583 ms","timestamp":"2021-04-16T13:26:09.776Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-16T13:30:07.783Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T14:08:11.836Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\Jakob\\\\Desktop\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T14:08:11.837Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-16T14:08:11.838Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T14:08:16.774Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T14:08:16.776Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T14:08:16.788Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T14:08:16.790Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-16T14:08:21.696Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-16T14:08:21.696Z"}
{"level":"error","message":"Fehler beim Start des Servers: MongoServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\n    at Timeout._onTimeout (C:\\Users\\Jakob\\Desktop\\gemaelde\\node_modules\\mongodb\\lib\\core\\sdam\\topology.js:438:30)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7) {\n  [stack]: 'MongoServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\\n' +\n    '    at Timeout._onTimeout (C:\\\\Users\\\\Jakob\\\\Desktop\\\\gemaelde\\\\node_modules\\\\mongodb\\\\lib\\\\core\\\\sdam\\\\topology.js:438:30)\\n' +\n    '    at listOnTimeout (node:internal/timers:557:17)\\n' +\n    '    at processTimers (node:internal/timers:500:7)',\n  [message]: 'connect ECONNREFUSED 127.0.0.1:27017',\n  name: 'MongoServerSelectionError',\n  reason: TopologyDescription {\n    type: 'Single',\n    setName: null,\n    maxSetVersion: null,\n    maxElectionId: null,\n    servers: Map(1) {\n      'localhost:27017' => ServerDescription {\n        address: 'localhost:27017',\n        error: Error: connect ECONNREFUSED 127.0.0.1:27017\n            at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1137:16) {\n          [stack]: 'Error: connect ECONNREFUSED 127.0.0.1:27017\\n' +\n            '    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1137:16)',\n          [message]: 'connect ECONNREFUSED 127.0.0.1:27017',\n          name: 'MongoNetworkError',\n          [errmsg]: [Getter],\n          [errorLabels]: [Getter]\n        },\n        roundTripTime: -1,\n        lastUpdateTime: 109801222,\n        lastWriteDate: null,\n        opTime: null,\n        type: 'Unknown',\n        topologyVersion: undefined,\n        minWireVersion: 0,\n        maxWireVersion: 0,\n        hosts: [ [length]: 0 ],\n        passives: [ [length]: 0 ],\n        arbiters: [ [length]: 0 ],\n        tags: [ [length]: 0 ],\n        [allHosts]: [Getter],\n        [isReadable]: [Getter],\n        [isDataBearing]: [Getter],\n        [isWritable]: [Getter],\n        [host]: [Getter],\n        [port]: [Getter]\n      }\n    },\n    stale: false,\n    compatible: true,\n    compatibilityError: null,\n    logicalSessionTimeoutMinutes: null,\n    heartbeatFrequencyMS: 10000,\n    localThresholdMS: 15,\n    commonWireVersion: null,\n    [options]: {\n      useUnifiedTopology: true,\n      localThresholdMS: 15,\n      serverSelectionTimeoutMS: 30000,\n      heartbeatFrequencyMS: 10000,\n      minHeartbeatFrequencyMS: 500,\n      cursorFactory: <ref *1> [class Cursor extends CoreCursor] {\n        [length]: 4,\n        [prototype]: CoreCursor {\n          [constructor]: [Circular *1],\n          [readPreference]: [Getter],\n          [sortValue]: [Getter],\n          [_initializeCursor]: [Function],\n          [hasNext]: [Function],\n          [next]: [Function],\n          [filter]: [Function],\n          [maxScan]: [Function],\n          [hint]: [Function],\n          [min]: [Function],\n          [max]: [Function],\n          [returnKey]: [Function],\n          [showRecordId]: [Function],\n          [snapshot]: [Function],\n          [setCursorOption]: [Function],\n          [addCursorFlag]: [Function],\n          [addQueryModifier]: [Function],\n          [comment]: [Function],\n          [maxAwaitTimeMS]: [Function],\n          [maxTimeMS]: [Function],\n          [project]: [Function],\n          [sort]: [Function],\n          [batchSize]: [Function],\n          [collation]: [Function],\n          [limit]: [Function],\n          [skip]: [Function],\n          [each]: [Function],\n          [forEach]: [Function],\n          [setReadPreference]: [Function],\n          [toArray]: [Function],\n          [count]: [Function],\n          [close]: [Function],\n          [map]: [Function],\n          [isClosed]: [Function],\n          [destroy]: [Function],\n          [stream]: [Function],\n          [transformStream]: [Function],\n          [explain]: [Function],\n          [getLogger]: [Function],\n          maxTimeMs: [Function],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        [name]: 'Cursor',\n        promises: [Getter]\n      },\n      reconnect: false,\n      emitError: true,\n      maxPoolSize: 10,\n      minPoolSize: 0,\n      monitorCommands: false,\n      servers: [ { host: 'localhost', port: 27017 }, [length]: 1 ],\n      authSource: 'admin',\n      caseTranslate: true,\n      useNewUrlParser: true,\n      directConnection: true,\n      checkServerIdentity: true,\n      rejectUnauthorized: true,\n      auth: { username: 'admin', password: 'p', db: 'admin', user: 'admin' },\n      dbName: 'acme',\n      socketTimeout: 0,\n      connectionTimeout: 10000,\n      retryWrites: true,\n      useRecoveryToken: true,\n      readPreference: ReadPreference {\n        mode: 'primary',\n        tags: undefined,\n        hedge: undefined,\n        preference: [Getter]\n      },\n      credentials: MongoCredentials {\n        username: 'admin',\n        password: 'p',\n        source: 'admin',\n        mechanism: 'default',\n        mechanismProperties: {}\n      },\n      promiseLibrary: <ref *2> [Function: Promise] {\n        [length]: 1,\n        [name]: 'Promise',\n        [prototype]: {\n          [constructor]: [Circular *2],\n          [then]: [Function],\n          [catch]: [Function],\n          [finally]: [Function],\n          [Symbol(Symbol.toStringTag)]: 'Promise'\n        },\n        [all]: [Function: all] { [length]: 1, [name]: 'all' },\n        [race]: [Function: race] { [length]: 1, [name]: 'race' },\n        [resolve]: [Function: resolve] { [length]: 1, [name]: 'resolve' },\n        [reject]: [Function: reject] { [length]: 1, [name]: 'reject' },\n        [allSettled]: [Function: allSettled] { [length]: 1, [name]: 'allSettled' },\n        [any]: [Function: any] { [length]: 1, [name]: 'any' },\n        [Symbol(Symbol.species)]: [Getter]\n      },\n      metadata: {\n        driver: { name: 'nodejs', version: '3.6.4' },\n        os: {\n          type: 'Windows_NT',\n          name: 'win32',\n          architecture: 'x64',\n          version: '10.0.19041'\n        },\n        platform: \"'Node.js v15.11.0, LE (unified)\"\n      },\n      compression: { compressors: [ [length]: 0 ] }\n    },\n    [error]: [Getter],\n    [hasKnownServers]: [Getter],\n    [hasDataBearingServers]: [Getter]\n  },\n  [errmsg]: [Getter],\n  [errorLabels]: [Getter]\n}","timestamp":"2021-04-16T14:08:51.721Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T14:09:38.284Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\Jakob\\\\Desktop\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T14:09:38.285Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-16T14:09:38.286Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T14:09:40.536Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T14:09:40.538Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T14:09:40.550Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T14:09:40.552Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-16T14:09:40.989Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-16T14:09:40.989Z"}
{"level":"error","message":"Fehler beim Start des Servers: MongoServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\n    at Timeout._onTimeout (C:\\Users\\Jakob\\Desktop\\gemaelde\\node_modules\\mongodb\\lib\\core\\sdam\\topology.js:438:30)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7) {\n  [stack]: 'MongoServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\\n' +\n    '    at Timeout._onTimeout (C:\\\\Users\\\\Jakob\\\\Desktop\\\\gemaelde\\\\node_modules\\\\mongodb\\\\lib\\\\core\\\\sdam\\\\topology.js:438:30)\\n' +\n    '    at listOnTimeout (node:internal/timers:557:17)\\n' +\n    '    at processTimers (node:internal/timers:500:7)',\n  [message]: 'connect ECONNREFUSED 127.0.0.1:27017',\n  name: 'MongoServerSelectionError',\n  reason: TopologyDescription {\n    type: 'Single',\n    setName: null,\n    maxSetVersion: null,\n    maxElectionId: null,\n    servers: Map(1) {\n      'localhost:27017' => ServerDescription {\n        address: 'localhost:27017',\n        error: Error: connect ECONNREFUSED 127.0.0.1:27017\n            at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1137:16) {\n          [stack]: 'Error: connect ECONNREFUSED 127.0.0.1:27017\\n' +\n            '    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1137:16)',\n          [message]: 'connect ECONNREFUSED 127.0.0.1:27017',\n          name: 'MongoNetworkError',\n          [errmsg]: [Getter],\n          [errorLabels]: [Getter]\n        },\n        roundTripTime: -1,\n        lastUpdateTime: 109880507,\n        lastWriteDate: null,\n        opTime: null,\n        type: 'Unknown',\n        topologyVersion: undefined,\n        minWireVersion: 0,\n        maxWireVersion: 0,\n        hosts: [ [length]: 0 ],\n        passives: [ [length]: 0 ],\n        arbiters: [ [length]: 0 ],\n        tags: [ [length]: 0 ],\n        [allHosts]: [Getter],\n        [isReadable]: [Getter],\n        [isDataBearing]: [Getter],\n        [isWritable]: [Getter],\n        [host]: [Getter],\n        [port]: [Getter]\n      }\n    },\n    stale: false,\n    compatible: true,\n    compatibilityError: null,\n    logicalSessionTimeoutMinutes: null,\n    heartbeatFrequencyMS: 10000,\n    localThresholdMS: 15,\n    commonWireVersion: null,\n    [options]: {\n      useUnifiedTopology: true,\n      localThresholdMS: 15,\n      serverSelectionTimeoutMS: 30000,\n      heartbeatFrequencyMS: 10000,\n      minHeartbeatFrequencyMS: 500,\n      cursorFactory: <ref *1> [class Cursor extends CoreCursor] {\n        [length]: 4,\n        [prototype]: CoreCursor {\n          [constructor]: [Circular *1],\n          [readPreference]: [Getter],\n          [sortValue]: [Getter],\n          [_initializeCursor]: [Function],\n          [hasNext]: [Function],\n          [next]: [Function],\n          [filter]: [Function],\n          [maxScan]: [Function],\n          [hint]: [Function],\n          [min]: [Function],\n          [max]: [Function],\n          [returnKey]: [Function],\n          [showRecordId]: [Function],\n          [snapshot]: [Function],\n          [setCursorOption]: [Function],\n          [addCursorFlag]: [Function],\n          [addQueryModifier]: [Function],\n          [comment]: [Function],\n          [maxAwaitTimeMS]: [Function],\n          [maxTimeMS]: [Function],\n          [project]: [Function],\n          [sort]: [Function],\n          [batchSize]: [Function],\n          [collation]: [Function],\n          [limit]: [Function],\n          [skip]: [Function],\n          [each]: [Function],\n          [forEach]: [Function],\n          [setReadPreference]: [Function],\n          [toArray]: [Function],\n          [count]: [Function],\n          [close]: [Function],\n          [map]: [Function],\n          [isClosed]: [Function],\n          [destroy]: [Function],\n          [stream]: [Function],\n          [transformStream]: [Function],\n          [explain]: [Function],\n          [getLogger]: [Function],\n          maxTimeMs: [Function],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter]\n        },\n        [name]: 'Cursor',\n        promises: [Getter]\n      },\n      reconnect: false,\n      emitError: true,\n      maxPoolSize: 10,\n      minPoolSize: 0,\n      monitorCommands: false,\n      servers: [ { host: 'localhost', port: 27017 }, [length]: 1 ],\n      authSource: 'admin',\n      caseTranslate: true,\n      useNewUrlParser: true,\n      directConnection: true,\n      checkServerIdentity: true,\n      rejectUnauthorized: true,\n      auth: { username: 'admin', password: 'p', db: 'admin', user: 'admin' },\n      dbName: 'acme',\n      socketTimeout: 0,\n      connectionTimeout: 10000,\n      retryWrites: true,\n      useRecoveryToken: true,\n      readPreference: ReadPreference {\n        mode: 'primary',\n        tags: undefined,\n        hedge: undefined,\n        preference: [Getter]\n      },\n      credentials: MongoCredentials {\n        username: 'admin',\n        password: 'p',\n        source: 'admin',\n        mechanism: 'default',\n        mechanismProperties: {}\n      },\n      promiseLibrary: <ref *2> [Function: Promise] {\n        [length]: 1,\n        [name]: 'Promise',\n        [prototype]: {\n          [constructor]: [Circular *2],\n          [then]: [Function],\n          [catch]: [Function],\n          [finally]: [Function],\n          [Symbol(Symbol.toStringTag)]: 'Promise'\n        },\n        [all]: [Function: all] { [length]: 1, [name]: 'all' },\n        [race]: [Function: race] { [length]: 1, [name]: 'race' },\n        [resolve]: [Function: resolve] { [length]: 1, [name]: 'resolve' },\n        [reject]: [Function: reject] { [length]: 1, [name]: 'reject' },\n        [allSettled]: [Function: allSettled] { [length]: 1, [name]: 'allSettled' },\n        [any]: [Function: any] { [length]: 1, [name]: 'any' },\n        [Symbol(Symbol.species)]: [Getter]\n      },\n      metadata: {\n        driver: { name: 'nodejs', version: '3.6.4' },\n        os: {\n          type: 'Windows_NT',\n          name: 'win32',\n          architecture: 'x64',\n          version: '10.0.19041'\n        },\n        platform: \"'Node.js v15.11.0, LE (unified)\"\n      },\n      compression: { compressors: [ [length]: 0 ] }\n    },\n    [error]: [Getter],\n    [hasKnownServers]: [Getter],\n    [hasDataBearingServers]: [Getter]\n  },\n  [errmsg]: [Getter],\n  [errorLabels]: [Getter]\n}","timestamp":"2021-04-16T14:10:11.026Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T14:15:59.817Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\Jakob\\\\Desktop\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-16T14:15:59.817Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-16T14:15:59.818Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T14:16:02.113Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T14:16:02.116Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-16T14:16:02.126Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-16T14:16:02.128Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-16T14:16:02.561Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-16T14:16:02.561Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-16T14:16:02.610Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-16T14:16:02.611Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-16T14:16:02.616Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-16T14:16:02.638Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-16T14:16:02.645Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-16T14:16:02.646Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-16T14:16:02.670Z"}
{"message":"\n\n.       __                                    _____\n.      / /_  _____  _________ ____  ____     /__  /\n. __  / / / / / _ \\/ ___/ __ `/ _ \\/ __ \\      / /\n./ /_/ / /_/ /  __/ /  / /_/ /  __/ / / /     / /___\n.\\____/\\__,_/\\___/_/   \\__, /\\___/_/ /_/     /____(_)\n.                     /____/\n\n    ","level":"info","timestamp":"2021-04-16T14:16:02.683Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-16T14:16:02.683Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-16T14:16:02.683Z"}
{"level":"info","message":"Rechnername:    DESKTOP-CUO9S6A","timestamp":"2021-04-16T14:16:02.684Z"}
{"level":"info","message":"IP-Adresse:     172.21.208.1","timestamp":"2021-04-16T14:16:02.689Z"}
{"level":"info","message":"Username:       Jakob","timestamp":"2021-04-16T14:16:02.691Z"}
{"message":"","level":"info","timestamp":"2021-04-16T14:16:02.691Z"}
{"level":"info","message":"https://DESKTOP-CUO9S6A:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-16T14:16:02.691Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-16T14:16:35.224Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-16T14:16:35.224Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-16T14:16:35.224Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-16T14:16:35.224Z"}
{"level":"debug","message":"BuchRequestHandler.find(): queryParams={}","timestamp":"2021-04-16T14:16:35.227Z"}
{"level":"debug","message":"BuchService.find(): query={}","timestamp":"2021-04-16T14:16:35.227Z"}
{"message":"BuchService.find(): alle Buecher","level":"debug","timestamp":"2021-04-16T14:16:35.228Z"}
{"level":"debug","message":"BuchRequestHandler.find(): buecher=[\n  {\n    _id: '00000000-0000-0000-0000-000000000001',\n    titel: 'Alpha',\n    rating: 4,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 11.1,\n    rabatt: 0.011,\n    lieferbar: true,\n    datum: 2020-02-01T00:00:00.000Z,\n    isbn: '978-3897225831',\n    homepage: 'https://acme.at/',\n    schlagwoerter: [ 'JAVASCRIPT', [length]: 1 ],\n    autoren: [\n      { nachname: 'Alpha', vorname: 'Adriana' },\n      { nachname: 'Alpha', vorname: 'Alfred' },\n      [length]: 2\n    ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000002',\n    titel: 'Beta',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'BAR_VERLAG',\n    preis: 22.2,\n    rabatt: 0.022,\n    lieferbar: true,\n    datum: 2020-02-02T00:00:00.000Z,\n    isbn: '978-3827315526',\n    homepage: 'https://acme.biz/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Beta', vorname: 'Brunhilde' }, [length]: 1 ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000004',\n    titel: 'Delta',\n    rating: 3,\n    art: 'DRUCKAUSGABE',\n    verlag: 'BAR_VERLAG',\n    preis: 44.4,\n    rabatt: 0.044,\n    lieferbar: true,\n    datum: 2020-02-04T00:00:00.000Z,\n    isbn: '978-0387534046',\n    homepage: 'https://acme.de/',\n    schlagwoerter: [ [length]: 0 ],\n    autoren: [ { nachname: 'Delta', vorname: 'Dieter' }, [length]: 1 ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000005',\n    titel: 'Epsilon',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'FOO_VERLAG',\n    preis: 55.5,\n    rabatt: 0.055,\n    lieferbar: true,\n    datum: 2020-02-05T00:00:00.000Z,\n    isbn: '978-3824404810',\n    homepage: 'https://acme.es/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Epsilon', vorname: 'Elfriede' }, [length]: 1 ],\n    __v: 0\n  },\n  {\n    _id: '00000000-0000-0000-0000-000000000003',\n    titel: 'Gamma',\n    rating: 1,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 33.3,\n    rabatt: 0.033,\n    lieferbar: true,\n    datum: 2020-02-03T00:00:00.000Z,\n    isbn: '978-0201633610',\n    homepage: 'https://acme.com/',\n    schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n    autoren: [ { nachname: 'Gamma', vorname: 'Claus' }, [length]: 1 ],\n    __v: 0\n  },\n  [length]: 5\n]","timestamp":"2021-04-16T14:16:35.243Z"}
{"level":"debug","message":"BuchRequestHandler.find(): buecher=[\n  {\n    titel: 'Alpha',\n    rating: 4,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 11.1,\n    rabatt: 0.011,\n    lieferbar: true,\n    datum: 2020-02-01T00:00:00.000Z,\n    isbn: '978-3897225831',\n    homepage: 'https://acme.at/',\n    schlagwoerter: [ 'JAVASCRIPT', [length]: 1 ],\n    autoren: [\n      { nachname: 'Alpha', vorname: 'Adriana' },\n      { nachname: 'Alpha', vorname: 'Alfred' },\n      [length]: 2\n    ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000001'\n      }\n    }\n  },\n  {\n    titel: 'Beta',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'BAR_VERLAG',\n    preis: 22.2,\n    rabatt: 0.022,\n    lieferbar: true,\n    datum: 2020-02-02T00:00:00.000Z,\n    isbn: '978-3827315526',\n    homepage: 'https://acme.biz/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Beta', vorname: 'Brunhilde' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000002'\n      }\n    }\n  },\n  {\n    titel: 'Delta',\n    rating: 3,\n    art: 'DRUCKAUSGABE',\n    verlag: 'BAR_VERLAG',\n    preis: 44.4,\n    rabatt: 0.044,\n    lieferbar: true,\n    datum: 2020-02-04T00:00:00.000Z,\n    isbn: '978-0387534046',\n    homepage: 'https://acme.de/',\n    schlagwoerter: [ [length]: 0 ],\n    autoren: [ { nachname: 'Delta', vorname: 'Dieter' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000004'\n      }\n    }\n  },\n  {\n    titel: 'Epsilon',\n    rating: 2,\n    art: 'KINDLE',\n    verlag: 'FOO_VERLAG',\n    preis: 55.5,\n    rabatt: 0.055,\n    lieferbar: true,\n    datum: 2020-02-05T00:00:00.000Z,\n    isbn: '978-3824404810',\n    homepage: 'https://acme.es/',\n    schlagwoerter: [ 'TYPESCRIPT', [length]: 1 ],\n    autoren: [ { nachname: 'Epsilon', vorname: 'Elfriede' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000005'\n      }\n    }\n  },\n  {\n    titel: 'Gamma',\n    rating: 1,\n    art: 'DRUCKAUSGABE',\n    verlag: 'FOO_VERLAG',\n    preis: 33.3,\n    rabatt: 0.033,\n    lieferbar: true,\n    datum: 2020-02-03T00:00:00.000Z,\n    isbn: '978-0201633610',\n    homepage: 'https://acme.com/',\n    schlagwoerter: [ 'JAVASCRIPT', 'TYPESCRIPT', [length]: 2 ],\n    autoren: [ { nachname: 'Gamma', vorname: 'Claus' }, [length]: 1 ],\n    _links: {\n      self: {\n        href: 'https://localhost:3000/api/buecher/00000000-0000-0000-0000-000000000003'\n      }\n    }\n  },\n  [length]: 5\n]","timestamp":"2021-04-16T14:16:35.244Z"}
{"level":"debug","message":"Response time: 33.0081 ms","timestamp":"2021-04-16T14:16:35.258Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-16T14:16:52.640Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:29:41.575Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:29:41.576Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:29:41.577Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:29:44.979Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:29:44.982Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:29:45.001Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:29:45.006Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:29:45.574Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:29:45.574Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:29:45.688Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:29:45.689Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:29:45.741Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:29:45.742Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:29:45.795Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:29:45.809Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:29:45.810Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:29:45.864Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:29:45.902Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:29:45.902Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:29:45.903Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:29:45.903Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:29:45.905Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:29:45.905Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:29:45.905Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:29:45.905Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:31:05.208Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:31:05.209Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:31:05.210Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:31:08.438Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:31:08.442Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:31:08.456Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:31:08.461Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:31:09.045Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:31:09.045Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:31:09.126Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:31:09.127Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:31:09.167Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:31:09.167Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:31:09.221Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:31:09.234Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:31:09.235Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:31:09.297Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:31:09.311Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:31:09.311Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:31:09.311Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:31:09.311Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:31:09.311Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:31:09.311Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:31:09.311Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:31:09.311Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:33:12.154Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:33:12.155Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:33:12.156Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:33:15.796Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:33:15.796Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:33:15.814Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:33:15.814Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:33:16.395Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:33:16.395Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:33:16.487Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:33:16.489Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:33:16.531Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:33:16.532Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:33:16.577Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:33:16.588Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:33:16.588Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:33:16.647Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:33:16.664Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:33:16.664Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:33:16.664Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:33:16.664Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:33:16.664Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:33:16.664Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:33:16.664Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:33:16.664Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-22T06:33:37.236Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:34:00.265Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:34:00.265Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:34:00.265Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:34:03.999Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:34:04.056Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:34:04.108Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:34:04.143Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:34:04.891Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:34:04.891Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:34:05.137Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:34:05.140Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:34:05.233Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:34:05.233Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:34:05.288Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:34:05.303Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:34:05.304Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:34:05.360Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:34:05.374Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:34:05.374Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:34:05.374Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:34:05.374Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:34:05.374Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:34:05.374Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:34:05.374Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:34:05.374Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T06:34:45.970Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T06:34:45.970Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T06:34:45.970Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T06:34:45.970Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:34:45.986Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-22T06:34:46.056Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzMyODYsImV4cCI6MTYxOTE1OTY4NiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiNjAwNTYyMGYtMzlmMi00OWFlLWEyNTYtYjNmNThiMDE2Y2EyIn0.LKwEnelV7yX4N1c6WKSns-T3TFS4xEOvfrnQouGh6EMmu9W7navdV6NZ_P8JyzXGQjae0358K3iSD6NTKiInexBmu5bTA8UgNB76NjZe0yELxNVGHgHyD7dOdJVHDdZQR0UhqkAHlFRzPvUSl03lh5JnFre4GPbRJ_qa90oqe_TlabpiZNvat2n-SYF72OjaVLpvIOGgPUEcPuOj_nYgoCqtg2VbBJgT2m0Bd_lKURaWK6hik0A2ED_fwwf6QZjc4GhbBuU4Tx5bX1TRa0XDj1IPOgoe5jPs5SYL45Um8hAiVTFqZPC8u61JpSIQ0VE8oWD-WBukyLvymQz0c3_now',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:34:46.063Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzMyODYsImV4cCI6MTYxOTE1OTY4NiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiNjAwNTYyMGYtMzlmMi00OWFlLWEyNTYtYjNmNThiMDE2Y2EyIn0.LKwEnelV7yX4N1c6WKSns-T3TFS4xEOvfrnQouGh6EMmu9W7navdV6NZ_P8JyzXGQjae0358K3iSD6NTKiInexBmu5bTA8UgNB76NjZe0yELxNVGHgHyD7dOdJVHDdZQR0UhqkAHlFRzPvUSl03lh5JnFre4GPbRJ_qa90oqe_TlabpiZNvat2n-SYF72OjaVLpvIOGgPUEcPuOj_nYgoCqtg2VbBJgT2m0Bd_lKURaWK6hik0A2ED_fwwf6QZjc4GhbBuU4Tx5bX1TRa0XDj1IPOgoe5jPs5SYL45Um8hAiVTFqZPC8u61JpSIQ0VE8oWD-WBukyLvymQz0c3_now',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:34:46.064Z"}
{"level":"debug","message":"Response time: 94.0951 ms","timestamp":"2021-04-22T06:34:46.066Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T06:35:08.539Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T06:35:08.539Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T06:35:08.539Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T06:35:08.539Z"}
{"level":"debug","message":"Response time: 4.1895 ms","timestamp":"2021-04-22T06:35:08.545Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-22T06:36:36.783Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:50:29.334Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:50:29.334Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:50:29.334Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:50:32.587Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:50:32.605Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:50:32.620Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:50:32.631Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:50:33.459Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:50:33.459Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:50:33.577Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:50:33.578Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:50:33.604Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:50:33.604Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:50:33.651Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:50:33.669Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:50:33.670Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:50:33.738Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:50:33.748Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:50:33.748Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:50:33.756Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:50:33.756Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:50:33.756Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:50:33.756Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:50:33.756Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:50:33.756Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:51:04.124Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:51:04.125Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:51:04.126Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:51:07.204Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:51:07.214Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:51:07.228Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:51:07.232Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:51:07.772Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:51:07.772Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:51:07.872Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:51:07.873Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:51:07.900Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:51:07.901Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:51:07.950Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:51:07.966Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:51:07.966Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:51:08.033Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:51:08.038Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:51:08.057Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:51:08.057Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:51:08.057Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:51:08.057Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:51:08.057Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:51:08.057Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:51:08.057Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T06:51:34.926Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T06:51:34.926Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T06:51:34.927Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T06:51:34.927Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:51:34.950Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-22T06:51:35.028Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzQyOTUsImV4cCI6MTYxOTE2MDY5NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiMGNiODYyODItMjc4OS00NjlhLWJmYmYtZGM2ZWM4NTBkOGY0In0.JLvKhUIYIzfbN5D51hY1atMWwlDwDG01lyLeKj0tGVdWfVcGqeuRCOmOecHge5VhKrkyPFsoQHuS-gFaVuDwmHWZq99J2sHskjXUJx9ILueBoY28-JZ_VsGiLuGjGnQxqgvT_VUWW9DBWHdqEw2SIz8V_FL4QSpXV8-qqlQX8e54CV3kJwq0wplZCTmNyweVYRaJ1-0ufeFeyXGdVJwkehF3uE0ESCj9sUvf2SWunkHSplXmeOlNhegN19Q6LQ2PHbMJ0rXzmeVBgbyeLU0At_w3VPLPcP2CpcfTCuRTKvjgXI8Ta5XkaGgtzmBlYKAlk8sDMjBEu-xToXQoDLrkvA',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:51:35.033Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzQyOTUsImV4cCI6MTYxOTE2MDY5NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiMGNiODYyODItMjc4OS00NjlhLWJmYmYtZGM2ZWM4NTBkOGY0In0.JLvKhUIYIzfbN5D51hY1atMWwlDwDG01lyLeKj0tGVdWfVcGqeuRCOmOecHge5VhKrkyPFsoQHuS-gFaVuDwmHWZq99J2sHskjXUJx9ILueBoY28-JZ_VsGiLuGjGnQxqgvT_VUWW9DBWHdqEw2SIz8V_FL4QSpXV8-qqlQX8e54CV3kJwq0wplZCTmNyweVYRaJ1-0ufeFeyXGdVJwkehF3uE0ESCj9sUvf2SWunkHSplXmeOlNhegN19Q6LQ2PHbMJ0rXzmeVBgbyeLU0At_w3VPLPcP2CpcfTCuRTKvjgXI8Ta5XkaGgtzmBlYKAlk8sDMjBEu-xToXQoDLrkvA',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:51:35.034Z"}
{"level":"debug","message":"Response time: 108.1875 ms","timestamp":"2021-04-22T06:51:35.036Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T06:51:45.482Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T06:51:45.482Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T06:51:45.483Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T06:51:45.483Z"}
{"level":"debug","message":"Response time: 3.9936 ms","timestamp":"2021-04-22T06:51:45.488Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:55:10.763Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:55:10.764Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:55:10.765Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:55:13.991Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:55:13.995Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:55:14.011Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:55:14.015Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:55:14.683Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:55:14.683Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:55:14.779Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:55:14.781Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:55:14.831Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:55:14.832Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:55:14.880Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:55:14.895Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:55:14.897Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:55:14.953Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:55:14.966Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:55:14.966Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:55:14.966Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:55:14.966Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:55:14.971Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:55:14.973Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:55:14.974Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:55:14.974Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:56:38.594Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:56:38.595Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:56:38.597Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:56:42.529Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:56:42.532Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:56:42.547Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:56:42.551Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:56:43.070Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:56:43.070Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:56:43.165Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird geloescht...","timestamp":"2021-04-22T06:56:43.167Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde geloescht.","timestamp":"2021-04-22T06:56:43.194Z"}
{"level":"warn","message":"Die Collection \"Buch\" wird neu angelegt...","timestamp":"2021-04-22T06:56:43.194Z"}
{"level":"warn","message":"Die Collection \"Buch\" wurde neu angelegt.","timestamp":"2021-04-22T06:56:43.246Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:56:43.262Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:56:43.262Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:56:43.319Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:56:43.334Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:56:43.334Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:56:43.334Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:56:43.334Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:56:43.334Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:56:43.334Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:56:43.334Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:56:43.334Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:57:04.946Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T06:57:04.946Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T06:57:04.946Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:57:08.648Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:57:08.648Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T06:57:08.665Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T06:57:08.683Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T06:57:09.181Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:57:09.181Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T06:57:09.281Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird geloescht...","timestamp":"2021-04-22T06:57:09.282Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde geloescht.","timestamp":"2021-04-22T06:57:09.328Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird neu angelegt...","timestamp":"2021-04-22T06:57:09.328Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde neu angelegt.","timestamp":"2021-04-22T06:57:09.381Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T06:57:09.397Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T06:57:09.399Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T06:57:09.483Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T06:57:09.504Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T06:57:09.505Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T06:57:09.505Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T06:57:09.506Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T06:57:09.511Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T06:57:09.513Z"}
{"message":"","level":"info","timestamp":"2021-04-22T06:57:09.513Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T06:57:09.514Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T06:58:06.283Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T06:58:06.283Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T06:58:06.284Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T06:58:06.284Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:58:06.301Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-22T06:58:06.386Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzQ2ODYsImV4cCI6MTYxOTE2MTA4NiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiNTM1OTg0ZTYtZTJmOS00MWNlLWJlZTctODFmNDA0ZGU3ZDYzIn0.qtTfUmJyv4-Iy6umjLqrZ2JeMbigQYpH1WZd2qzBblfjZZ4jq1VrnlwTnhvfWcWsNMQr8VE03Ps15EIP1ci_9eiUMHnFzSMkg9FYQirh_vZxAlQm_1NUUHiZ5yvWtheMDBlx_mKAjlMNHYJHHywPbvHxhnjfikZ6A5Jw_iB_6DclREhndENxq0VvBp2ug2OmCIkgyQ6GodJJTVBTADD_3CjdPLbgvHQ9-JRXFZzeLfQtOMz5kMsZWNwCEKRxTIkEmwIPMeuGwerc7omOWkXEb_xxHAqOcgNjH9NIgDE5x1TuIp69-Vj2kDzq7Av9mDEY6ehlEKCR67K9E2vM-trX9g',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:58:06.391Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzQ2ODYsImV4cCI6MTYxOTE2MTA4NiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiNTM1OTg0ZTYtZTJmOS00MWNlLWJlZTctODFmNDA0ZGU3ZDYzIn0.qtTfUmJyv4-Iy6umjLqrZ2JeMbigQYpH1WZd2qzBblfjZZ4jq1VrnlwTnhvfWcWsNMQr8VE03Ps15EIP1ci_9eiUMHnFzSMkg9FYQirh_vZxAlQm_1NUUHiZ5yvWtheMDBlx_mKAjlMNHYJHHywPbvHxhnjfikZ6A5Jw_iB_6DclREhndENxq0VvBp2ug2OmCIkgyQ6GodJJTVBTADD_3CjdPLbgvHQ9-JRXFZzeLfQtOMz5kMsZWNwCEKRxTIkEmwIPMeuGwerc7omOWkXEb_xxHAqOcgNjH9NIgDE5x1TuIp69-Vj2kDzq7Av9mDEY6ehlEKCR67K9E2vM-trX9g',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T06:58:06.391Z"}
{"level":"debug","message":"Response time: 109.41319999999999 ms","timestamp":"2021-04-22T06:58:06.394Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T06:58:12.189Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T06:58:12.189Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T06:58:12.189Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T06:58:12.189Z"}
{"level":"debug","message":"Response time: 2.783 ms","timestamp":"2021-04-22T06:58:12.193Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T07:03:58.693Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T07:03:58.693Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T07:03:58.693Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T07:03:58.693Z"}
{"level":"debug","message":"Response time: 5.421399999999999 ms","timestamp":"2021-04-22T07:03:58.700Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T07:08:09.218Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T07:08:09.218Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T07:08:09.219Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T07:08:12.541Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T07:08:12.544Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T07:08:12.560Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T07:08:12.564Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T07:08:13.077Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T07:08:13.078Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T07:08:13.155Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird geloescht...","timestamp":"2021-04-22T07:08:13.157Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde geloescht.","timestamp":"2021-04-22T07:08:13.202Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird neu angelegt...","timestamp":"2021-04-22T07:08:13.203Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde neu angelegt.","timestamp":"2021-04-22T07:08:13.277Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T07:08:13.290Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T07:08:13.290Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T07:08:13.328Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T07:08:13.346Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T07:08:13.347Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T07:08:13.347Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T07:08:13.347Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T07:08:13.349Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T07:08:13.351Z"}
{"message":"","level":"info","timestamp":"2021-04-22T07:08:13.351Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T07:08:13.352Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T07:09:33.314Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T07:09:33.316Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T07:09:33.318Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T07:09:36.637Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T07:09:36.641Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T07:09:36.656Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T07:09:36.661Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T07:09:37.187Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T07:09:37.187Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T07:09:37.279Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird geloescht...","timestamp":"2021-04-22T07:09:37.280Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde geloescht.","timestamp":"2021-04-22T07:09:37.319Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird neu angelegt...","timestamp":"2021-04-22T07:09:37.320Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde neu angelegt.","timestamp":"2021-04-22T07:09:37.388Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T07:09:37.403Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T07:09:37.404Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T07:09:37.446Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T07:09:37.469Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T07:09:37.470Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T07:09:37.471Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T07:09:37.472Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T07:09:37.475Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T07:09:37.477Z"}
{"message":"","level":"info","timestamp":"2021-04-22T07:09:37.478Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T07:09:37.478Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-22T07:09:39.491Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T07:10:02.224Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\NoahStock\\\\SWE\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-22T07:10:02.225Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-22T07:10:02.226Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T07:10:05.293Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T07:10:05.297Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-22T07:10:05.315Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-22T07:10:05.320Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-22T07:10:05.966Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-22T07:10:05.966Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-22T07:10:06.050Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird geloescht...","timestamp":"2021-04-22T07:10:06.051Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde geloescht.","timestamp":"2021-04-22T07:10:06.080Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird neu angelegt...","timestamp":"2021-04-22T07:10:06.081Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde neu angelegt.","timestamp":"2021-04-22T07:10:06.127Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-22T07:10:06.142Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-22T07:10:06.143Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-22T07:10:06.208Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-22T07:10:06.232Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-22T07:10:06.235Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19041","timestamp":"2021-04-22T07:10:06.236Z"}
{"level":"info","message":"Rechnername:    SWE","timestamp":"2021-04-22T07:10:06.237Z"}
{"level":"info","message":"IP-Adresse:     10.0.0.4","timestamp":"2021-04-22T07:10:06.240Z"}
{"level":"info","message":"Username:       NoahStock","timestamp":"2021-04-22T07:10:06.242Z"}
{"message":"","level":"info","timestamp":"2021-04-22T07:10:06.243Z"}
{"level":"info","message":"https://SWE:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-22T07:10:06.244Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T07:10:44.731Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T07:10:44.731Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T07:10:44.731Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T07:10:44.731Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T07:10:44.751Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-22T07:10:44.821Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzU0NDQsImV4cCI6MTYxOTE2MTg0NCwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiYjIyODUyNGYtOGMyMy00Y2U4LWE0NzItMGViZjY4NzRkYTBiIn0.aVZ02WCNUqV7tR6FpY_mtpgymi_YdqwJjeZp973tuV5hdReDXZHCffuHYy3mm-AZdIsoqqwgw3KYSKBQ3gnug2fzZLkHT50EnN8kHQRAAiVwOQxl8qoAt0308nAAVxBcYJ27i17df_CQU5b7Uppm9cQxYtU4wszQJNIXBJVn6PiUSeiUBlBv_L78grG58vv02BASwOnXB5fcDdyvW7KIO_owLh_3mupRdFMVTB1rl2zV9R-OxSWE4_vcbZPbOH2K0FKff8qm26756oLY3W8t_6BU73zx5LjID6g-i44lECJOLLqnLogc-eAB1rUkc_gjsuoPn3iLnMK-UaLyoukL_A',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T07:10:44.825Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkwNzU0NDQsImV4cCI6MTYxOTE2MTg0NCwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiYjIyODUyNGYtOGMyMy00Y2U4LWE0NzItMGViZjY4NzRkYTBiIn0.aVZ02WCNUqV7tR6FpY_mtpgymi_YdqwJjeZp973tuV5hdReDXZHCffuHYy3mm-AZdIsoqqwgw3KYSKBQ3gnug2fzZLkHT50EnN8kHQRAAiVwOQxl8qoAt0308nAAVxBcYJ27i17df_CQU5b7Uppm9cQxYtU4wszQJNIXBJVn6PiUSeiUBlBv_L78grG58vv02BASwOnXB5fcDdyvW7KIO_owLh_3mupRdFMVTB1rl2zV9R-OxSWE4_vcbZPbOH2K0FKff8qm26756oLY3W8t_6BU73zx5LjID6g-i44lECJOLLqnLogc-eAB1rUkc_gjsuoPn3iLnMK-UaLyoukL_A',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-22T07:10:44.826Z"}
{"level":"debug","message":"Response time: 95.75659999999999 ms","timestamp":"2021-04-22T07:10:44.828Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-22T07:10:54.244Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-22T07:10:54.244Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-22T07:10:54.244Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-22T07:10:54.245Z"}
{"level":"debug","message":"Response time: 3.7958 ms","timestamp":"2021-04-22T07:10:54.249Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-22T07:11:13.048Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-23T17:34:24.574Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\schwa\\\\Desktop\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-23T17:34:24.575Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-23T17:34:24.576Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-23T17:34:30.094Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-23T17:34:30.098Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-23T17:34:30.112Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-23T17:34:30.114Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-23T17:34:35.721Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-23T17:34:35.721Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-23T17:34:35.777Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird geloescht...","timestamp":"2021-04-23T17:34:35.778Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird neu angelegt...","timestamp":"2021-04-23T17:34:35.785Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde neu angelegt.","timestamp":"2021-04-23T17:34:35.814Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-23T17:34:35.822Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-23T17:34:35.823Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-23T17:34:35.853Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-23T17:34:35.869Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-23T17:34:35.869Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19042","timestamp":"2021-04-23T17:34:35.870Z"}
{"level":"info","message":"Rechnername:    LAPTOP-KEVIN","timestamp":"2021-04-23T17:34:35.870Z"}
{"level":"info","message":"IP-Adresse:     172.17.128.1","timestamp":"2021-04-23T17:34:35.876Z"}
{"level":"info","message":"Username:       schwa","timestamp":"2021-04-23T17:34:35.878Z"}
{"message":"","level":"info","timestamp":"2021-04-23T17:34:35.878Z"}
{"level":"info","message":"https://LAPTOP-KEVIN:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-23T17:34:35.879Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:34:49.764Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:34:49.764Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:34:49.764Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:34:49.764Z"}
{"level":"debug","message":"Response time: 11.287799999999999 ms","timestamp":"2021-04-23T17:34:49.778Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:34:58.276Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:34:58.276Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:34:58.276Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:34:58.276Z"}
{"level":"debug","message":"Response time: 2.3775 ms","timestamp":"2021-04-23T17:34:58.280Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:35:01.658Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:35:01.658Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:35:01.658Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:35:01.658Z"}
{"level":"debug","message":"Response time: 1.0273999999999999 ms","timestamp":"2021-04-23T17:35:01.660Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '\"0\"',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:35:04.410Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:35:04.410Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:35:04.410Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:35:04.410Z"}
{"level":"debug","message":"Response time: 1.2610999999999999 ms","timestamp":"2021-04-23T17:35:04.412Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '0',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:35:06.448Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:35:06.449Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:35:06.449Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:35:06.449Z"}
{"level":"debug","message":"Response time: 0.8807999999999999 ms","timestamp":"2021-04-23T17:35:06.450Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:35:17.538Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:35:17.538Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:35:17.538Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:35:17.538Z"}
{"level":"debug","message":"Response time: 0.9167 ms","timestamp":"2021-04-23T17:35:17.540Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-23T17:35:34.908Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-23T17:53:59.503Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\schwa\\\\Desktop\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-23T17:53:59.504Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-23T17:53:59.505Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-23T17:54:02.220Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-23T17:54:02.223Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-23T17:54:02.236Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-23T17:54:02.239Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-23T17:54:02.705Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-23T17:54:02.706Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-23T17:54:02.763Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird geloescht...","timestamp":"2021-04-23T17:54:02.764Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde geloescht.","timestamp":"2021-04-23T17:54:02.784Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird neu angelegt...","timestamp":"2021-04-23T17:54:02.784Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde neu angelegt.","timestamp":"2021-04-23T17:54:02.815Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-23T17:54:02.824Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-23T17:54:02.824Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-23T17:54:02.854Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-23T17:54:02.869Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-23T17:54:02.870Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19042","timestamp":"2021-04-23T17:54:02.870Z"}
{"level":"info","message":"Rechnername:    LAPTOP-KEVIN","timestamp":"2021-04-23T17:54:02.871Z"}
{"level":"info","message":"IP-Adresse:     172.17.128.1","timestamp":"2021-04-23T17:54:02.877Z"}
{"level":"info","message":"Username:       schwa","timestamp":"2021-04-23T17:54:02.879Z"}
{"message":"","level":"info","timestamp":"2021-04-23T17:54:02.880Z"}
{"level":"info","message":"https://LAPTOP-KEVIN:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-23T17:54:02.880Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:54:28.069Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:54:28.069Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:54:28.070Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:54:28.070Z"}
{"level":"debug","message":"Response time: 11.3204 ms","timestamp":"2021-04-23T17:54:28.083Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '\"0\"',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:54:30.888Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:54:30.888Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:54:30.888Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:54:30.888Z"}
{"level":"debug","message":"Response time: 1.708 ms","timestamp":"2021-04-23T17:54:30.891Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:54:32.559Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:54:32.559Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:54:32.559Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:54:32.559Z"}
{"level":"debug","message":"Response time: 0.9755999999999999 ms","timestamp":"2021-04-23T17:54:32.561Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '0',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:54:33.970Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:54:33.971Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:54:33.971Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:54:33.971Z"}
{"level":"debug","message":"Response time: 1.7049999999999998 ms","timestamp":"2021-04-23T17:54:33.974Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:54:35.116Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:54:35.116Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:54:35.116Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:54:35.116Z"}
{"level":"debug","message":"Response time: 1.0728 ms","timestamp":"2021-04-23T17:54:35.119Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:54:36.604Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:54:36.604Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:54:36.604Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:54:36.604Z"}
{"level":"debug","message":"Response time: 0.952 ms","timestamp":"2021-04-23T17:54:36.606Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:54:38.102Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:54:38.103Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:54:38.103Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:54:38.103Z"}
{"level":"debug","message":"Response time: 2.5861 ms","timestamp":"2021-04-23T17:54:38.107Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:55:09.194Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:55:09.194Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:55:09.194Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:55:09.194Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T17:55:09.314Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-23T17:55:09.383Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDA1MDksImV4cCI6MTYxOTI4NjkwOSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZGVkZGEzMGEtYWY1MC00YmIwLWEzNTAtODQ0MWRiMzU5NTk1In0.WchpHtjtXiH3Nl-M756x-7XDEs-UBYp3xtsdIU-h-aRk2sZWhW5pMq9EiE7vHlpkfMLAmd5HTZ50D8IVhfKI1er2OzoIGMQqjxqQtK6TrKX8b9QbBpksw4p-kZdfG-BKxt9HLnvt59aS3N3iPhk2ht-f0A93RHbCCtmuP1dDe1WUIihYCzuPfq9M5DDpCb6hkQSSiMFu6O7mkEK2ukPqZV6NdhZhVmYR_-Gkm82luNtYRJ_14-p_Fjv5YDRv-VD4KY6ECOycvAJylY23bN4jyWzVUTjDLdkGjqtt2iSXLzz9oZV-jounF0U8yLLmPWyFuS2DHAyBjk33xSFoyswFDw',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T17:55:09.386Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDA1MDksImV4cCI6MTYxOTI4NjkwOSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZGVkZGEzMGEtYWY1MC00YmIwLWEzNTAtODQ0MWRiMzU5NTk1In0.WchpHtjtXiH3Nl-M756x-7XDEs-UBYp3xtsdIU-h-aRk2sZWhW5pMq9EiE7vHlpkfMLAmd5HTZ50D8IVhfKI1er2OzoIGMQqjxqQtK6TrKX8b9QbBpksw4p-kZdfG-BKxt9HLnvt59aS3N3iPhk2ht-f0A93RHbCCtmuP1dDe1WUIihYCzuPfq9M5DDpCb6hkQSSiMFu6O7mkEK2ukPqZV6NdhZhVmYR_-Gkm82luNtYRJ_14-p_Fjv5YDRv-VD4KY6ECOycvAJylY23bN4jyWzVUTjDLdkGjqtt2iSXLzz9oZV-jounF0U8yLLmPWyFuS2DHAyBjk33xSFoyswFDw',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T17:55:09.387Z"}
{"level":"debug","message":"Response time: 192.0206 ms","timestamp":"2021-04-23T17:55:09.387Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:55:14.867Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:55:14.867Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:55:14.867Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:55:14.867Z"}
{"level":"debug","message":"Response time: 0.8619 ms","timestamp":"2021-04-23T17:55:14.869Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '\"0\"',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:55:16.746Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:55:16.746Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:55:16.746Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:55:16.746Z"}
{"level":"debug","message":"Response time: 0.9568 ms","timestamp":"2021-04-23T17:55:16.749Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '0',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:55:18.129Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:55:18.129Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:55:18.129Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:55:18.129Z"}
{"level":"debug","message":"Response time: 0.9551 ms","timestamp":"2021-04-23T17:55:18.131Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:55:19.390Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:55:19.390Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:55:19.390Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:55:19.390Z"}
{"level":"debug","message":"Response time: 0.8461 ms","timestamp":"2021-04-23T17:55:19.392Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T17:59:51.943Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T17:59:51.943Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T17:59:51.943Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T17:59:51.943Z"}
{"level":"debug","message":"Response time: 1.6693 ms","timestamp":"2021-04-23T17:59:51.945Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:02:49.821Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:02:49.821Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:02:49.822Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:02:49.822Z"}
{"level":"debug","message":"Response time: 0.9933 ms","timestamp":"2021-04-23T18:02:49.824Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:02:51.223Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:02:51.223Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:02:51.223Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:02:51.223Z"}
{"level":"debug","message":"Response time: 0.7263999999999999 ms","timestamp":"2021-04-23T18:02:51.224Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:03:09.308Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:03:09.308Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:03:09.308Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:03:09.308Z"}
{"level":"debug","message":"Response time: 1.9243 ms","timestamp":"2021-04-23T18:03:09.311Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:03:10.201Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:03:10.202Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:03:10.202Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:03:10.202Z"}
{"level":"debug","message":"Response time: 0.8441 ms","timestamp":"2021-04-23T18:03:10.203Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:03:10.764Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:03:10.765Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:03:10.765Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:03:10.765Z"}
{"level":"debug","message":"Response time: 2.1261 ms","timestamp":"2021-04-23T18:03:10.768Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:03:11.415Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:03:11.415Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:03:11.415Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:03:11.415Z"}
{"level":"debug","message":"Response time: 3.2776 ms","timestamp":"2021-04-23T18:03:11.419Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:03:12.066Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:03:12.067Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:03:12.067Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:03:12.067Z"}
{"level":"debug","message":"Response time: 0.7908999999999999 ms","timestamp":"2021-04-23T18:03:12.069Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '\"0\"',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:03:17.515Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:03:17.515Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:03:17.515Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:03:17.515Z"}
{"level":"debug","message":"Response time: 0.7264999999999999 ms","timestamp":"2021-04-23T18:03:17.517Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:03:36.295Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:03:36.295Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:03:36.295Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:03:36.296Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:03:36.300Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-23T18:03:36.376Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDEwMTYsImV4cCI6MTYxOTI4NzQxNiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiNDgyNjYyMDktNWI5ZS00NjhhLWIyNmUtMmY3NDFhNmFiMGNhIn0.Ztbg3GC0s3zQRFY2HGRWtCkH6w8fS_XSPhfTSZIdSTP9Xg94dBopGZMO43d5vDJeFkUV3hlzWlH4wiKy3SuoqV9HaDdSsTbJqV9CCNC4YvwKvmnnemmlzn7ozQYYEa67KXGpMsXKPc6wqRJTvialm3xzH039iytSxFamXnmQD_nC6zU5pZfh7tcrJ8uVfkgDPGOlnMQoSHYVMVh4AaBF-lf50JRNKPwWGHilcsPAdg_5c7RZkkE_YoI9db2pruoneV51p_nQD1Nt9ooVQUf1r8NBO8c2X-PgCBt_pfQAFa7JijnagIdKL8KkqBKo9MLx_wluZMQO0BCCskx7arJpnw',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:03:36.378Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDEwMTYsImV4cCI6MTYxOTI4NzQxNiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiNDgyNjYyMDktNWI5ZS00NjhhLWIyNmUtMmY3NDFhNmFiMGNhIn0.Ztbg3GC0s3zQRFY2HGRWtCkH6w8fS_XSPhfTSZIdSTP9Xg94dBopGZMO43d5vDJeFkUV3hlzWlH4wiKy3SuoqV9HaDdSsTbJqV9CCNC4YvwKvmnnemmlzn7ozQYYEa67KXGpMsXKPc6wqRJTvialm3xzH039iytSxFamXnmQD_nC6zU5pZfh7tcrJ8uVfkgDPGOlnMQoSHYVMVh4AaBF-lf50JRNKPwWGHilcsPAdg_5c7RZkkE_YoI9db2pruoneV51p_nQD1Nt9ooVQUf1r8NBO8c2X-PgCBt_pfQAFa7JijnagIdKL8KkqBKo9MLx_wluZMQO0BCCskx7arJpnw',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:03:36.378Z"}
{"level":"debug","message":"Response time: 79.98899999999999 ms","timestamp":"2021-04-23T18:03:36.378Z"}
{"message":"Server wird heruntergefahren...","level":"info","timestamp":"2021-04-23T18:10:14.181Z"}
{"level":"debug","message":"consoleOptions: {\n  level: 'info',\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-23T18:18:58.261Z"}
{"level":"debug","message":"fileOptions: {\n  filename: 'C:\\\\Users\\\\schwa\\\\Desktop\\\\gemaelde\\\\log\\\\server.log',\n  level: 'debug',\n  maxsize: 250000,\n  maxFiles: 3,\n  format: Format {\n    options: {},\n    Format: <ref *1> [Function: Format] {\n      [length]: 0,\n      [name]: 'Format',\n      [prototype]: {\n        [constructor]: [Circular *1],\n        transform: [Function (anonymous)] { [length]: 1, [name]: '' }\n      }\n    }\n  }\n}","timestamp":"2021-04-23T18:18:58.261Z"}
{"message":"Logging durch Winston ist konfiguriert","level":"info","timestamp":"2021-04-23T18:18:58.262Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-23T18:19:01.015Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-23T18:19:01.021Z"}
{"level":"info","message":"RoleService: roles=[ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]","timestamp":"2021-04-23T18:19:01.037Z"}
{"level":"info","message":"UsersService: users=[\n  {\n    id: '20000000-0000-0000-0000-000000000001',\n    username: 'admin',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'admin@acme.com',\n    roles: [\n      'admin',\n      'mitarbeiter',\n      'abteilungsleiter',\n      'kunde',\n      [length]: 4\n    ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000002',\n    username: 'adriana.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'adriana.alpha@acme.com',\n    roles: [ 'admin', 'mitarbeiter', 'kunde', [length]: 3 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000003',\n    username: 'alfred.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'alfred.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000004',\n    username: 'antonia.alpha',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'antonia.alpha@acme.com',\n    roles: [ 'mitarbeiter', 'kunde', [length]: 2 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000005',\n    username: 'dirk.delta',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'dirk.delta@acme.com',\n    roles: [ 'kunde', [length]: 1 ]\n  },\n  {\n    id: '20000000-0000-0000-0000-000000000006',\n    username: 'emilia.epsilon',\n    password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n    email: 'emilia.epsilon@acme.com'\n  },\n  [length]: 6\n]","timestamp":"2021-04-23T18:19:01.039Z"}
{"level":"info","message":"populateDB(): true","timestamp":"2021-04-23T18:19:01.513Z"}
{"level":"debug","message":"mongodb.connectMongoDB(): url=mongodb://admin:p@localhost/acme?authSource=admin","timestamp":"2021-04-23T18:19:01.513Z"}
{"message":"mongodb.connectMongoDB(): DB-Client geoeffnet","level":"debug","timestamp":"2021-04-23T18:19:01.571Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird geloescht...","timestamp":"2021-04-23T18:19:01.572Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde geloescht.","timestamp":"2021-04-23T18:19:01.601Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wird neu angelegt...","timestamp":"2021-04-23T18:19:01.601Z"}
{"level":"warn","message":"Die Collection \"Gemaelde\" wurde neu angelegt.","timestamp":"2021-04-23T18:19:01.626Z"}
{"level":"warn","message":"5 Datensaetze wurden eingefuegt.","timestamp":"2021-04-23T18:19:01.635Z"}
{"level":"info","message":"URL fuer mongoose: mongodb://USERNAME:***@localhost/acme?authSource=admin","timestamp":"2021-04-23T18:19:01.636Z"}
{"level":"info","message":"DB-Verbindung zu acme ist aufgebaut","timestamp":"2021-04-23T18:19:01.665Z"}
{"message":"\n.\n.___________.__          __________                     \n.__    ___/|  |__   __________    ____ ___.__. ______\n.  |    |   |  |  _/ __ |    |  _//  _ <   |  |/  ___/\n.  |    |   |   Y    ___/|    |   (  <_> )___  |___  \n.  |____|   |___|  /___  >______  /____// ____/____  >\n.                /     /       /       /         / \n.                  /____/\n\n    ","level":"info","timestamp":"2021-04-23T18:19:01.682Z"}
{"level":"info","message":"Node:           v15.11.0","timestamp":"2021-04-23T18:19:01.683Z"}
{"level":"info","message":"Betriebssystem: Windows_NT 10.0.19042","timestamp":"2021-04-23T18:19:01.683Z"}
{"level":"info","message":"Rechnername:    LAPTOP-KEVIN","timestamp":"2021-04-23T18:19:01.683Z"}
{"level":"info","message":"IP-Adresse:     172.17.128.1","timestamp":"2021-04-23T18:19:01.689Z"}
{"level":"info","message":"Username:       schwa","timestamp":"2021-04-23T18:19:01.691Z"}
{"message":"","level":"info","timestamp":"2021-04-23T18:19:01.691Z"}
{"level":"info","message":"https://LAPTOP-KEVIN:3000 ist gestartet: Herunterfahren durch <Strg>C","timestamp":"2021-04-23T18:19:01.691Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:19:07.134Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:19:07.135Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:19:07.135Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:19:07.135Z"}
{"level":"debug","message":"Response time: 6.0823 ms","timestamp":"2021-04-23T18:19:07.142Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:19:08.773Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:19:08.773Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:19:08.774Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:19:08.774Z"}
{"level":"debug","message":"Response time: 1.4344 ms","timestamp":"2021-04-23T18:19:08.776Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'if-none-match': '\"0\"',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:19:10.464Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:19:10.464Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:19:10.465Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:19:10.465Z"}
{"level":"debug","message":"Response time: 0.964 ms","timestamp":"2021-04-23T18:19:10.467Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'accept-encoding': 'gzip, deflate',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:19:18.008Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:19:18.008Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:19:18.008Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:19:18.008Z"}
{"level":"debug","message":"Response time: 0.8994 ms","timestamp":"2021-04-23T18:19:18.010Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:19:26.122Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:19:26.123Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:19:26.123Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:19:26.123Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:19:26.137Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-23T18:19:26.208Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NjYsImV4cCI6MTYxOTI4ODM2NiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiYzAyZDg0NjEtMzZkYy00NDg4LWFjY2EtZTcxNmY2MjcyNmE1In0.cqF-n46Kzh67xwyT0fZnB4hBIvfKW5kGYO564try9BmVQt3J5f94kTAST230UkzqDk2y6A_xwADWV63hCphVyy5-5M6Xpfbo3mvdiJPocn7NRCDjm7zAFQanC2gsYGuqhV5G-CwLCztux7Sa57x2xSpskotxoyRXIcM59se9PScn1n8kgvRDiEI8gquQOQiccS2N4akS65mey7Krffr-Ps7BNd8Q5j1ywqoDdK1bRWTQYU1c2XwSsPhg6sdjMpQW0vN7s5UpKPXMe5mwE8xdekbp9-_gzi9tWakyDEW86XeZg8-0l-rp9VCQmf-Tw2Zi-tcx9eN4IwS5sNaM5aL6_Q',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:19:26.211Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NjYsImV4cCI6MTYxOTI4ODM2NiwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiYzAyZDg0NjEtMzZkYy00NDg4LWFjY2EtZTcxNmY2MjcyNmE1In0.cqF-n46Kzh67xwyT0fZnB4hBIvfKW5kGYO564try9BmVQt3J5f94kTAST230UkzqDk2y6A_xwADWV63hCphVyy5-5M6Xpfbo3mvdiJPocn7NRCDjm7zAFQanC2gsYGuqhV5G-CwLCztux7Sa57x2xSpskotxoyRXIcM59se9PScn1n8kgvRDiEI8gquQOQiccS2N4akS65mey7Krffr-Ps7BNd8Q5j1ywqoDdK1bRWTQYU1c2XwSsPhg6sdjMpQW0vN7s5UpKPXMe5mwE8xdekbp9-_gzi9tWakyDEW86XeZg8-0l-rp9VCQmf-Tw2Zi-tcx9eN4IwS5sNaM5aL6_Q',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:19:26.211Z"}
{"level":"debug","message":"Response time: 88.0848 ms","timestamp":"2021-04-23T18:19:26.212Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/x-www-form-urlencoded',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '25',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:19:35.390Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:19:35.390Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:19:35.390Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:19:35.390Z"}
{"level":"debug","message":"user: {\n  id: '20000000-0000-0000-0000-000000000001',\n  username: 'admin',\n  password: '$2b$10$YTg4.iW.FPRqHExVLRf05Ob/z/BQqjUxJgncct2TgxGBjl4cCUNGS',\n  email: 'admin@acme.com',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:19:35.393Z"}
{"level":"debug","message":"AuthService.checkPassword(): true","timestamp":"2021-04-23T18:19:35.467Z"}
{"level":"debug","message":"AuthService.login(): result={\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NzUsImV4cCI6MTYxOTI4ODM3NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZmI4MjgzYWYtMGU2ZS00MGMzLThkMTEtNjAyMWE4MjI1MTAyIn0.EcXflXBv_04J57ZpydiVErC-iFpWoBEgSq3_TR4POWleM_4BORhh3wbUV0VaCp5cWAsKgAWKZEgHFFnv5Y7hEt9qxlr5IEnWfViD75gAvVkCqu5vkDNkhi6N7I--0lqO6lEJyPIKnmp_MB7jAxavVGQXoCZTczOiaisJ02PGo_4WKTushG2hvp14IsRaUWIk4FlLnEkHjtbCm87tdRU5rq8jagHlgRFxvsNp2T8yNQ5KdbW89tFQw2fIyXoyl8Wta1txUJDPmTcp1VuCgmJIZ-Uw4X-eq8Y4smHAWT08rtyez0LK6ypOI4igVPrU9N5UPQTjyy_UK-9HNgYjn_GcTQ',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:19:35.469Z"}
{"level":"debug","message":"AuthRequestHandler.login(): {\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NzUsImV4cCI6MTYxOTI4ODM3NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZmI4MjgzYWYtMGU2ZS00MGMzLThkMTEtNjAyMWE4MjI1MTAyIn0.EcXflXBv_04J57ZpydiVErC-iFpWoBEgSq3_TR4POWleM_4BORhh3wbUV0VaCp5cWAsKgAWKZEgHFFnv5Y7hEt9qxlr5IEnWfViD75gAvVkCqu5vkDNkhi6N7I--0lqO6lEJyPIKnmp_MB7jAxavVGQXoCZTczOiaisJ02PGo_4WKTushG2hvp14IsRaUWIk4FlLnEkHjtbCm87tdRU5rq8jagHlgRFxvsNp2T8yNQ5KdbW89tFQw2fIyXoyl8Wta1txUJDPmTcp1VuCgmJIZ-Uw4X-eq8Y4smHAWT08rtyez0LK6ypOI4igVPrU9N5UPQTjyy_UK-9HNgYjn_GcTQ',\n  expiresIn: '1d',\n  roles: [ 'admin', 'mitarbeiter', 'abteilungsleiter', 'kunde', [length]: 4 ]\n}","timestamp":"2021-04-23T18:19:35.469Z"}
{"level":"debug","message":"Response time: 78.256 ms","timestamp":"2021-04-23T18:19:35.469Z"}
{"level":"debug","message":"Request: headers={\n  'user-agent': 'vscode-restclient',\n  'content-type': 'application/json',\n  authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NzUsImV4cCI6MTYxOTI4ODM3NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZmI4MjgzYWYtMGU2ZS00MGMzLThkMTEtNjAyMWE4MjI1MTAyIn0.EcXflXBv_04J57ZpydiVErC-iFpWoBEgSq3_TR4POWleM_4BORhh3wbUV0VaCp5cWAsKgAWKZEgHFFnv5Y7hEt9qxlr5IEnWfViD75gAvVkCqu5vkDNkhi6N7I--0lqO6lEJyPIKnmp_MB7jAxavVGQXoCZTczOiaisJ02PGo_4WKTushG2hvp14IsRaUWIk4FlLnEkHjtbCm87tdRU5rq8jagHlgRFxvsNp2T8yNQ5KdbW89tFQw2fIyXoyl8Wta1txUJDPmTcp1VuCgmJIZ-Uw4X-eq8Y4smHAWT08rtyez0LK6ypOI4igVPrU9N5UPQTjyy_UK-9HNgYjn_GcTQ',\n  'accept-encoding': 'gzip, deflate',\n  'content-length': '298',\n  host: 'localhost:3000',\n  connection: 'close'\n}","timestamp":"2021-04-23T18:19:38.784Z"}
{"level":"debug","message":"Request: protocol=https","timestamp":"2021-04-23T18:19:38.784Z"}
{"level":"debug","message":"Request: hostname=localhost","timestamp":"2021-04-23T18:19:38.784Z"}
{"level":"debug","message":"Request: body=undefined","timestamp":"2021-04-23T18:19:38.784Z"}
{"level":"error","message":"SharedRequestHandler.internalError(): error=<ref *26> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: [Object], tail: [Object], length: 1 },\n    length: 298,\n    pipes: [ [length]: 0 ],\n    flowing: null,\n    ended: false,\n    endEmitted: false,\n    reading: false,\n    constructed: true,\n    sync: true,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: false,\n    destroyed: false,\n    errored: null,\n    closed: false,\n    closeEmitted: false,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: null,\n    [pipesCount]: [Getter],\n    [paused]: [Getter/Setter]\n  },\n  [domain]: null,\n  _events: [Object: null prototype] {\n    end: <ref *1> [Function: clearRequestTimeout] {\n      [length]: 1,\n      [name]: 'clearRequestTimeout',\n      [prototype]: { [constructor]: [Circular *1] }\n    }\n  },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *21> TLSSocket {\n    _tlsOptions: {\n      secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      isServer: true,\n      server: <ref *2> Server {\n        _contexts: [ [length]: 0 ],\n        requestCert: false,\n        rejectUnauthorized: true,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        pfx: undefined,\n        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n        passphrase: undefined,\n        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n        clientCertEngine: undefined,\n        ca: undefined,\n        minVersion: 'TLSv1.3',\n        maxVersion: undefined,\n        secureProtocol: undefined,\n        crl: undefined,\n        sigalgs: undefined,\n        ciphers: undefined,\n        ecdhCurve: undefined,\n        dhparam: undefined,\n        honorCipherOrder: true,\n        secureOptions: undefined,\n        sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n        privateKeyIdentifier: undefined,\n        privateKeyEngine: undefined,\n        _sharedCreds: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          connection: [Function],\n          secureConnection: [Function],\n          request: [Function],\n          tlsClientError: [Function]\n        },\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: TCP {\n          reading: false,\n          onconnection: [Function],\n          [Symbol(owner_symbol)]: [Circular *2],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _usingWorkers: false,\n        _workers: [ [length]: 0 ],\n        _unref: false,\n        allowHalfOpen: false,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 0,\n        keepAliveTimeout: 5000,\n        maxHeadersCount: null,\n        headersTimeout: 60000,\n        requestTimeout: 0,\n        _connectionKey: '6::::3000',\n        [Symbol(IncomingMessage)]: [Function: IncomingMessage] {\n          [length]: 1,\n          [name]: 'IncomingMessage',\n          [prototype]: [Readable],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(ServerResponse)]: [Function: ServerResponse] {\n          [length]: 1,\n          [name]: 'ServerResponse',\n          [prototype]: [OutgoingMessage],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(handshake-timeout)]: 120000,\n        [Symbol(snicallback)]: undefined,\n        [Symbol(pskcallback)]: undefined,\n        [Symbol(pskidentityhint)]: undefined,\n        [Symbol(kCapture)]: false,\n        [Symbol(async_id_symbol)]: 236,\n        [Symbol(enableTrace)]: undefined,\n        listening: [Getter]\n      },\n      requestCert: false,\n      rejectUnauthorized: true,\n      handshakeTimeout: 120000,\n      ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n      SNICallback: <ref *3> [Function: SNICallback] {\n        [length]: 2,\n        [name]: 'SNICallback',\n        [prototype]: { [constructor]: [Circular *3] }\n      },\n      enableTrace: undefined,\n      pauseOnConnect: false,\n      pskCallback: undefined,\n      pskIdentityHint: undefined\n    },\n    _secureEstablished: true,\n    _securePending: false,\n    _newSessionPending: false,\n    _controlReleased: true,\n    secureConnecting: false,\n    _SNICallback: null,\n    servername: 'localhost',\n    alpnProtocol: false,\n    authorized: false,\n    authorizationError: null,\n    encrypted: true,\n    _events: [Object: null prototype] {\n      close: [\n        [Function: onSocketCloseDestroySSL] {\n          [length]: 0,\n          [name]: 'onSocketCloseDestroySSL',\n          [prototype]: [Object]\n        },\n        [Function: onSocketClose] {\n          [length]: 1,\n          [name]: 'onSocketClose',\n          [prototype]: [Object]\n        },\n        [Function: bound socketOnClose] {\n          [length]: 0,\n          [name]: 'bound socketOnClose'\n        },\n        [Function: onServerResponseClose] {\n          [length]: 0,\n          [name]: 'onServerResponseClose',\n          [prototype]: [Object]\n        },\n        [Function: onevent] {\n          [length]: 1,\n          [name]: 'onevent',\n          [prototype]: [Object]\n        },\n        [length]: 5\n      ],\n      end: [\n        [Function: onReadableStreamEnd] {\n          [length]: 0,\n          [name]: 'onReadableStreamEnd',\n          [prototype]: [Object]\n        },\n        [Function: bound socketOnEnd] {\n          [length]: 0,\n          [name]: 'bound socketOnEnd'\n        },\n        [length]: 2\n      ],\n      newListener: <ref *4> [Function: keylogNewListener] {\n        [length]: 1,\n        [name]: 'keylogNewListener',\n        [prototype]: { [constructor]: [Circular *4] }\n      },\n      secure: <ref *5> [Function: onServerSocketSecure] {\n        [length]: 0,\n        [name]: 'onServerSocketSecure',\n        [prototype]: { [constructor]: [Circular *5] }\n      },\n      _tlsError: <ref *6> [Function: onSocketTLSError] {\n        [length]: 1,\n        [name]: 'onSocketTLSError',\n        [prototype]: { [constructor]: [Circular *6] }\n      },\n      timeout: <ref *7> [Function: socketOnTimeout] {\n        [length]: 0,\n        [name]: 'socketOnTimeout',\n        [prototype]: { [constructor]: [Circular *7] }\n      },\n      data: [Function: bound socketOnData] {\n        [length]: 1,\n        [name]: 'bound socketOnData'\n      },\n      error: [\n        [Function: socketOnError] {\n          [length]: 1,\n          [name]: 'socketOnError',\n          [prototype]: [Object]\n        },\n        [Function: onevent] {\n          [length]: 1,\n          [name]: 'onevent',\n          [prototype]: [Object]\n        },\n        [length]: 2\n      ],\n      drain: [Function: bound socketOnDrain] {\n        [length]: 0,\n        [name]: 'bound socketOnDrain'\n      },\n      resume: <ref *8> [Function: onSocketResume] {\n        [length]: 0,\n        [name]: 'onSocketResume',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      pause: <ref *9> [Function: onSocketPause] {\n        [length]: 0,\n        [name]: 'onSocketPause',\n        [prototype]: { [constructor]: [Circular *9] }\n      }\n    },\n    _eventsCount: 11,\n    connecting: false,\n    _hadError: false,\n    _parent: <ref *10> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [ [length]: 0 ],\n        flowing: null,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        constructed: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: true,\n        destroyed: false,\n        errored: null,\n        closed: false,\n        closeEmitted: false,\n        defaultEncoding: 'utf8',\n        awaitDrainWriters: null,\n        multiAwaitDrain: false,\n        readingMore: false,\n        decoder: null,\n        encoding: null,\n        [Symbol(kPaused)]: null,\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      [domain]: null,\n      _events: [Object: null prototype] {\n        end: [Function: onReadableStreamEnd] {\n          [length]: 0,\n          [name]: 'onReadableStreamEnd',\n          [prototype]: [Object]\n        },\n        connect: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        error: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _writableState: WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writecb: null,\n        writelen: 0,\n        afterWriteTickInfo: null,\n        buffered: [ [length]: 0 ],\n        bufferedIndex: 0,\n        allBuffers: true,\n        allNoop: true,\n        pendingcb: 0,\n        constructed: true,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: true,\n        errored: null,\n        closed: false,\n        closeEmitted: false,\n        [Symbol(kOnFinished)]: [ [length]: 0 ],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: false,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: <ref *2> Server {\n        _contexts: [ [length]: 0 ],\n        requestCert: false,\n        rejectUnauthorized: true,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        pfx: undefined,\n        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n        passphrase: undefined,\n        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n        clientCertEngine: undefined,\n        ca: undefined,\n        minVersion: 'TLSv1.3',\n        maxVersion: undefined,\n        secureProtocol: undefined,\n        crl: undefined,\n        sigalgs: undefined,\n        ciphers: undefined,\n        ecdhCurve: undefined,\n        dhparam: undefined,\n        honorCipherOrder: true,\n        secureOptions: undefined,\n        sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n        privateKeyIdentifier: undefined,\n        privateKeyEngine: undefined,\n        _sharedCreds: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          connection: [Function],\n          secureConnection: [Function],\n          request: [Function],\n          tlsClientError: [Function]\n        },\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: TCP {\n          reading: false,\n          onconnection: [Function],\n          [Symbol(owner_symbol)]: [Circular *2],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _usingWorkers: false,\n        _workers: [ [length]: 0 ],\n        _unref: false,\n        allowHalfOpen: false,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 0,\n        keepAliveTimeout: 5000,\n        maxHeadersCount: null,\n        headersTimeout: 60000,\n        requestTimeout: 0,\n        _connectionKey: '6::::3000',\n        [Symbol(IncomingMessage)]: [Function: IncomingMessage] {\n          [length]: 1,\n          [name]: 'IncomingMessage',\n          [prototype]: [Readable],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(ServerResponse)]: [Function: ServerResponse] {\n          [length]: 1,\n          [name]: 'ServerResponse',\n          [prototype]: [OutgoingMessage],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(handshake-timeout)]: 120000,\n        [Symbol(snicallback)]: undefined,\n        [Symbol(pskcallback)]: undefined,\n        [Symbol(pskidentityhint)]: undefined,\n        [Symbol(kCapture)]: false,\n        [Symbol(async_id_symbol)]: 236,\n        [Symbol(enableTrace)]: undefined,\n        listening: [Getter]\n      },\n      _server: <ref *2> Server {\n        _contexts: [ [length]: 0 ],\n        requestCert: false,\n        rejectUnauthorized: true,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        pfx: undefined,\n        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n        passphrase: undefined,\n        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n        clientCertEngine: undefined,\n        ca: undefined,\n        minVersion: 'TLSv1.3',\n        maxVersion: undefined,\n        secureProtocol: undefined,\n        crl: undefined,\n        sigalgs: undefined,\n        ciphers: undefined,\n        ecdhCurve: undefined,\n        dhparam: undefined,\n        honorCipherOrder: true,\n        secureOptions: undefined,\n        sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n        privateKeyIdentifier: undefined,\n        privateKeyEngine: undefined,\n        _sharedCreds: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          connection: [Function],\n          secureConnection: [Function],\n          request: [Function],\n          tlsClientError: [Function]\n        },\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: TCP {\n          reading: false,\n          onconnection: [Function],\n          [Symbol(owner_symbol)]: [Circular *2],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _usingWorkers: false,\n        _workers: [ [length]: 0 ],\n        _unref: false,\n        allowHalfOpen: false,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 0,\n        keepAliveTimeout: 5000,\n        maxHeadersCount: null,\n        headersTimeout: 60000,\n        requestTimeout: 0,\n        _connectionKey: '6::::3000',\n        [Symbol(IncomingMessage)]: [Function: IncomingMessage] {\n          [length]: 1,\n          [name]: 'IncomingMessage',\n          [prototype]: [Readable],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(ServerResponse)]: [Function: ServerResponse] {\n          [length]: 1,\n          [name]: 'ServerResponse',\n          [prototype]: [OutgoingMessage],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(handshake-timeout)]: 120000,\n        [Symbol(snicallback)]: undefined,\n        [Symbol(pskcallback)]: undefined,\n        [Symbol(pskidentityhint)]: undefined,\n        [Symbol(kCapture)]: false,\n        [Symbol(async_id_symbol)]: 236,\n        [Symbol(enableTrace)]: undefined,\n        listening: [Getter]\n      },\n      [Symbol(async_id_symbol)]: 1223,\n      [Symbol(kHandle)]: TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: [Circular *10],\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [_connecting]: [Getter],\n      [pending]: [Getter],\n      [readyState]: [Getter],\n      [bufferSize]: [Getter],\n      bytesRead: [Getter],\n      remoteAddress: [Getter],\n      remoteFamily: [Getter],\n      remotePort: [Getter],\n      localAddress: [Getter],\n      localPort: [Getter],\n      _bytesDispatched: [Getter],\n      bytesWritten: [Getter],\n      [_handle]: [Getter/Setter],\n      [Symbol(kUpdateTimer)]: [Getter],\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [ [length]: 0 ],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false,\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    [domain]: null,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [ [length]: 0 ],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: [ [length]: 0 ],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: false,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: <ref *2> Server {\n      _contexts: [ [length]: 0 ],\n      requestCert: false,\n      rejectUnauthorized: true,\n      ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n      pfx: undefined,\n      key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n      passphrase: undefined,\n      cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n      clientCertEngine: undefined,\n      ca: undefined,\n      minVersion: 'TLSv1.3',\n      maxVersion: undefined,\n      secureProtocol: undefined,\n      crl: undefined,\n      sigalgs: undefined,\n      ciphers: undefined,\n      ecdhCurve: undefined,\n      dhparam: undefined,\n      honorCipherOrder: true,\n      secureOptions: undefined,\n      sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n      privateKeyIdentifier: undefined,\n      privateKeyEngine: undefined,\n      _sharedCreds: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      [domain]: null,\n      _events: [Object: null prototype] {\n        connection: [Function: tlsConnectionListener] {\n          [length]: 1,\n          [name]: 'tlsConnectionListener',\n          [prototype]: [Object]\n        },\n        secureConnection: [Function: connectionListener] {\n          [length]: 1,\n          [name]: 'connectionListener',\n          [prototype]: [Object]\n        },\n        request: [Function: app] {\n          [length]: 3,\n          [name]: 'app',\n          [prototype]: [Object],\n          [constructor]: [Function],\n          _events: [Object: null prototype],\n          _eventsCount: 1,\n          _maxListeners: undefined,\n          setMaxListeners: [Function],\n          getMaxListeners: [Function],\n          emit: [Function],\n          addListener: [Function],\n          on: [Function],\n          prependListener: [Function],\n          once: [Function],\n          prependOnceListener: [Function],\n          removeListener: [Function],\n          off: [Function],\n          removeAllListeners: [Function],\n          listeners: [Function],\n          rawListeners: [Function],\n          listenerCount: [Function],\n          eventNames: [Function],\n          init: [Function],\n          defaultConfiguration: [Function],\n          lazyrouter: [Function],\n          handle: [Function],\n          use: [Function],\n          route: [Function],\n          engine: [Function],\n          param: [Function],\n          set: [Function],\n          path: [Function],\n          enabled: [Function],\n          disabled: [Function],\n          enable: [Function],\n          disable: [Function],\n          acl: [Function],\n          bind: [Function],\n          checkout: [Function],\n          connect: [Function],\n          copy: [Function],\n          delete: [Function],\n          get: [Function],\n          head: [Function],\n          link: [Function],\n          lock: [Function],\n          'm-search': [Function],\n          merge: [Function],\n          mkactivity: [Function],\n          mkcalendar: [Function],\n          mkcol: [Function],\n          move: [Function],\n          notify: [Function],\n          options: [Function],\n          patch: [Function],\n          post: [Function],\n          pri: [Function],\n          propfind: [Function],\n          proppatch: [Function],\n          purge: [Function],\n          put: [Function],\n          rebind: [Function],\n          report: [Function],\n          search: [Function],\n          source: [Function],\n          subscribe: [Function],\n          trace: [Function],\n          unbind: [Function],\n          unlink: [Function],\n          unlock: [Function],\n          unsubscribe: [Function],\n          all: [Function],\n          del: [Function],\n          render: [Function],\n          listen: [Function],\n          request: [IncomingMessage],\n          response: [ServerResponse],\n          cache: {},\n          engines: {},\n          settings: [Object],\n          locals: [Object: null prototype],\n          mountpath: '/',\n          [router]: [Getter],\n          _router: [Function]\n        },\n        tlsClientError: [Function: addListener] {\n          [length]: 2,\n          [name]: 'addListener',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: TCP {\n        reading: false,\n        onconnection: [Function: onconnection] {\n          [length]: 2,\n          [name]: 'onconnection',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *2],\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _usingWorkers: false,\n      _workers: [ [length]: 0 ],\n      _unref: false,\n      allowHalfOpen: false,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::3000',\n      [Symbol(IncomingMessage)]: <ref *11> [Function: IncomingMessage] {\n        [length]: 1,\n        [name]: 'IncomingMessage',\n        [prototype]: Readable {\n          [constructor]: [Circular *11],\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          setTimeout: [Function],\n          _read: [Function],\n          destroy: [Function],\n          _addHeaderLines: [Function],\n          _addHeaderLine: [Function],\n          _dump: [Function],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter],\n          _events: undefined,\n          _eventsCount: 0,\n          _maxListeners: undefined,\n          [Symbol(kCapture)]: false\n        },\n        promises: [Getter],\n        usingDomains: true,\n        captureRejectionSymbol: Symbol(nodejs.rejection),\n        captureRejections: [Getter/Setter],\n        errorMonitor: Symbol(events.errorMonitor),\n        defaultMaxListeners: [Getter/Setter],\n        [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n        [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n      },\n      [Symbol(ServerResponse)]: <ref *12> [Function: ServerResponse] {\n        [length]: 1,\n        [name]: 'ServerResponse',\n        [prototype]: OutgoingMessage {\n          [constructor]: [Circular *12],\n          _finish: [Function],\n          statusCode: 200,\n          statusMessage: undefined,\n          assignSocket: [Function],\n          detachSocket: [Function],\n          writeContinue: [Function],\n          writeProcessing: [Function],\n          _implicitHeader: [Function],\n          writeHead: [Function],\n          writeHeader: [Function],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          _events: undefined,\n          _eventsCount: 0,\n          _maxListeners: undefined,\n          [Symbol(kCapture)]: false\n        },\n        promises: [Getter],\n        usingDomains: true,\n        captureRejectionSymbol: Symbol(nodejs.rejection),\n        captureRejections: [Getter/Setter],\n        errorMonitor: Symbol(events.errorMonitor),\n        defaultMaxListeners: [Getter/Setter],\n        [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n        [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n      },\n      [Symbol(handshake-timeout)]: 120000,\n      [Symbol(snicallback)]: undefined,\n      [Symbol(pskcallback)]: undefined,\n      [Symbol(pskidentityhint)]: undefined,\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 236,\n      [Symbol(enableTrace)]: undefined,\n      listening: [Getter]\n    },\n    _server: null,\n    ssl: TLSWrap {\n      _parent: <ref *13> TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [Circular *13],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _parentWrap: <ref *10> Socket {\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: null,\n        _readableState: ReadableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          buffer: BufferList { head: null, tail: null, length: 0 },\n          length: 0,\n          pipes: [Array],\n          flowing: null,\n          ended: false,\n          endEmitted: false,\n          reading: true,\n          constructed: true,\n          sync: false,\n          needReadable: true,\n          emittedReadable: false,\n          readableListening: false,\n          resumeScheduled: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          destroyed: false,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          defaultEncoding: 'utf8',\n          awaitDrainWriters: null,\n          multiAwaitDrain: false,\n          readingMore: false,\n          decoder: null,\n          encoding: null,\n          [Symbol(kPaused)]: null,\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          end: [Function],\n          connect: [Function],\n          error: [Function]\n        },\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: WritableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          finalCalled: false,\n          needDrain: false,\n          ending: false,\n          ended: false,\n          finished: false,\n          destroyed: false,\n          decodeStrings: false,\n          defaultEncoding: 'utf8',\n          length: 0,\n          writing: false,\n          corked: 0,\n          sync: true,\n          bufferProcessing: false,\n          onwrite: [Function],\n          writecb: null,\n          writelen: 0,\n          afterWriteTickInfo: null,\n          buffered: [Array],\n          bufferedIndex: 0,\n          allBuffers: true,\n          allNoop: true,\n          pendingcb: 0,\n          constructed: true,\n          prefinished: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          [Symbol(kOnFinished)]: [Array],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        _server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        [Symbol(async_id_symbol)]: 1223,\n        [Symbol(kHandle)]: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *10],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [readableEnded]: [Getter]\n      },\n      _secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      reading: true,\n      onkeylog: <ref *14> [Function: onkeylog] {\n        [length]: 1,\n        [name]: 'onkeylog',\n        [prototype]: { [constructor]: [Circular *14] }\n      },\n      onhandshakestart: <ref *15> [Function: onhandshakestart] {\n        [length]: 1,\n        [name]: 'onhandshakestart',\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      onhandshakedone: <ref *16> [Function: onhandshakedone] {\n        [length]: 0,\n        [name]: 'onhandshakedone',\n        [prototype]: { [constructor]: [Circular *16] }\n      },\n      onclienthello: <ref *17> [Function: loadSession] {\n        [length]: 1,\n        [name]: 'loadSession',\n        [prototype]: { [constructor]: [Circular *17] }\n      },\n      oncertcb: <ref *18> [Function: loadSNI] {\n        [length]: 1,\n        [name]: 'loadSNI',\n        [prototype]: { [constructor]: [Circular *18] }\n      },\n      onnewsession: <ref *19> [Function: onnewsession] {\n        [length]: 2,\n        [name]: 'onnewsession',\n        [prototype]: { [constructor]: [Circular *19] }\n      },\n      lastHandshakeTime: 47329,\n      handshakes: 0,\n      onerror: <ref *20> [Function: onerror] {\n        [length]: 1,\n        [name]: 'onerror',\n        [prototype]: { [constructor]: [Circular *20] }\n      },\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *21],\n      writeQueueSize: [Getter],\n      [fd]: [Getter],\n      [_externalStream]: [Getter],\n      [bytesRead]: [Getter],\n      [bytesWritten]: [Getter],\n      isStreamBase: true\n    },\n    _requestCert: false,\n    _rejectUnauthorized: true,\n    timeout: 0,\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout] {\n        [length]: 0,\n        [name]: 'bound setRequestTimeout'\n      },\n      '1': <ref *22> [Function: parserOnHeaders] {\n        [length]: 2,\n        [name]: 'parserOnHeaders',\n        [prototype]: { [constructor]: [Circular *22] }\n      },\n      '2': <ref *23> [Function: parserOnHeadersComplete] {\n        [length]: 9,\n        [name]: 'parserOnHeadersComplete',\n        [prototype]: { [constructor]: [Circular *23] }\n      },\n      '3': <ref *24> [Function: parserOnBody] {\n        [length]: 3,\n        [name]: 'parserOnBody',\n        [prototype]: { [constructor]: [Circular *24] }\n      },\n      '4': <ref *25> [Function: parserOnMessageComplete] {\n        [length]: 0,\n        [name]: 'parserOnMessageComplete',\n        [prototype]: { [constructor]: [Circular *25] }\n      },\n      '5': [Function: bound onParserExecute] {\n        [length]: 1,\n        [name]: 'bound onParserExecute'\n      },\n      '6': [Function: bound onParserTimeout] {\n        [length]: 0,\n        [name]: 'bound onParserTimeout'\n      },\n      _headers: [ [length]: 0 ],\n      _url: '',\n      socket: [Circular *21],\n      incoming: [Circular *26],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming] {\n        [length]: 2,\n        [name]: 'bound parserOnIncoming'\n      },\n      [Symbol(resource_symbol)]: HTTPServerAsyncResource {\n        type: 'HTTPINCOMINGMESSAGE',\n        socket: [Circular *21]\n      }\n    },\n    on: <ref *27> [Function: socketListenerWrap] {\n      [length]: 2,\n      [name]: 'socketListenerWrap',\n      [prototype]: { [constructor]: [Circular *27] }\n    },\n    addListener: <ref *28> [Function: socketListenerWrap] {\n      [length]: 2,\n      [name]: 'socketListenerWrap',\n      [prototype]: { [constructor]: [Circular *28] }\n    },\n    prependListener: <ref *29> [Function: socketListenerWrap] {\n      [length]: 2,\n      [name]: 'socketListenerWrap',\n      [prototype]: { [constructor]: [Circular *29] }\n    },\n    setEncoding: <ref *30> [Function: socketSetEncoding] {\n      [length]: 0,\n      [name]: 'socketSetEncoding',\n      [prototype]: { [constructor]: [Circular *30] }\n    },\n    _paused: false,\n    _httpMessage: ServerResponse {\n      [domain]: null,\n      _events: [Object: null prototype] {\n        finish: [ [Function], [Function], [length]: 2 ],\n        end: [Function: onevent] {\n          [length]: 1,\n          [name]: 'onevent',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *21],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData] {\n        [length]: 1,\n        [name]: 'bound updateOutgoingData'\n      },\n      req: [Circular *26],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      _startAt: undefined,\n      _startTime: undefined,\n      writeHead: <ref *31> [Function: writeHead] {\n        [length]: 1,\n        [name]: 'writeHead',\n        [prototype]: { [constructor]: [Circular *31] }\n      },\n      __onFinished: <ref *32> [Function: listener] {\n        [length]: 1,\n        [name]: 'listener',\n        [prototype]: { [constructor]: [Circular *32] },\n        queue: [ [Function], [length]: 1 ]\n      },\n      flush: <ref *33> [Function: flush] {\n        [length]: 0,\n        [name]: 'flush',\n        [prototype]: { [constructor]: [Circular *33] }\n      },\n      write: <ref *34> [Function: write] {\n        [length]: 2,\n        [name]: 'write',\n        [prototype]: { [constructor]: [Circular *34] }\n      },\n      end: <ref *35> [Function: end] {\n        [length]: 2,\n        [name]: 'end',\n        [prototype]: { [constructor]: [Circular *35] }\n      },\n      on: <ref *36> [Function: on] {\n        [length]: 2,\n        [name]: 'on',\n        [prototype]: { [constructor]: [Circular *36] }\n      },\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'content-security-policy': [\n          'Content-Security-Policy',\n          \"default-src https: 'self';style-src https: 'unsafe-inline';script-src https: 'unsafe-inline' 'unsafe-eval';img-src data: 'self'\",\n          [length]: 2\n        ],\n        'x-xss-protection': [ 'X-XSS-Protection', '0', [length]: 2 ],\n        'x-frame-options': [ 'X-Frame-Options', 'SAMEORIGIN', [length]: 2 ],\n        'strict-transport-security': [\n          'Strict-Transport-Security',\n          'max-age=15552000; includeSubDomains',\n          [length]: 2\n        ],\n        'x-content-type-options': [ 'X-Content-Type-Options', 'nosniff', [length]: 2 ],\n        'x-ratelimit-limit': [ 'X-RateLimit-Limit', 100, [length]: 2 ],\n        'x-ratelimit-remaining': [ 'X-RateLimit-Remaining', 93, [length]: 2 ],\n        date: [ 'Date', 'Fri, 23 Apr 2021 18:19:38 GMT', [length]: 2 ],\n        'x-ratelimit-reset': [ 'X-RateLimit-Reset', 1619202842, [length]: 2 ]\n      },\n      statusCode: 200,\n      statusMessage: undefined\n    },\n    _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 55457 },\n    [Symbol(res)]: TLSWrap {\n      _parent: <ref *13> TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [Circular *13],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _parentWrap: <ref *10> Socket {\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: null,\n        _readableState: ReadableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          buffer: BufferList { head: null, tail: null, length: 0 },\n          length: 0,\n          pipes: [Array],\n          flowing: null,\n          ended: false,\n          endEmitted: false,\n          reading: true,\n          constructed: true,\n          sync: false,\n          needReadable: true,\n          emittedReadable: false,\n          readableListening: false,\n          resumeScheduled: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          destroyed: false,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          defaultEncoding: 'utf8',\n          awaitDrainWriters: null,\n          multiAwaitDrain: false,\n          readingMore: false,\n          decoder: null,\n          encoding: null,\n          [Symbol(kPaused)]: null,\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          end: [Function],\n          connect: [Function],\n          error: [Function]\n        },\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: WritableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          finalCalled: false,\n          needDrain: false,\n          ending: false,\n          ended: false,\n          finished: false,\n          destroyed: false,\n          decodeStrings: false,\n          defaultEncoding: 'utf8',\n          length: 0,\n          writing: false,\n          corked: 0,\n          sync: true,\n          bufferProcessing: false,\n          onwrite: [Function],\n          writecb: null,\n          writelen: 0,\n          afterWriteTickInfo: null,\n          buffered: [Array],\n          bufferedIndex: 0,\n          allBuffers: true,\n          allNoop: true,\n          pendingcb: 0,\n          constructed: true,\n          prefinished: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          [Symbol(kOnFinished)]: [Array],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        _server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        [Symbol(async_id_symbol)]: 1223,\n        [Symbol(kHandle)]: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *10],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [readableEnded]: [Getter]\n      },\n      _secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      reading: true,\n      onkeylog: <ref *14> [Function: onkeylog] {\n        [length]: 1,\n        [name]: 'onkeylog',\n        [prototype]: { [constructor]: [Circular *14] }\n      },\n      onhandshakestart: <ref *15> [Function: onhandshakestart] {\n        [length]: 1,\n        [name]: 'onhandshakestart',\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      onhandshakedone: <ref *16> [Function: onhandshakedone] {\n        [length]: 0,\n        [name]: 'onhandshakedone',\n        [prototype]: { [constructor]: [Circular *16] }\n      },\n      onclienthello: <ref *17> [Function: loadSession] {\n        [length]: 1,\n        [name]: 'loadSession',\n        [prototype]: { [constructor]: [Circular *17] }\n      },\n      oncertcb: <ref *18> [Function: loadSNI] {\n        [length]: 1,\n        [name]: 'loadSNI',\n        [prototype]: { [constructor]: [Circular *18] }\n      },\n      onnewsession: <ref *19> [Function: onnewsession] {\n        [length]: 2,\n        [name]: 'onnewsession',\n        [prototype]: { [constructor]: [Circular *19] }\n      },\n      lastHandshakeTime: 47329,\n      handshakes: 0,\n      onerror: <ref *20> [Function: onerror] {\n        [length]: 1,\n        [name]: 'onerror',\n        [prototype]: { [constructor]: [Circular *20] }\n      },\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *21],\n      writeQueueSize: [Getter],\n      [fd]: [Getter],\n      [_externalStream]: [Getter],\n      [bytesRead]: [Getter],\n      [bytesWritten]: [Getter],\n      isStreamBase: true\n    },\n    [Symbol(verified)]: false,\n    [Symbol(pendingSession)]: null,\n    [Symbol(async_id_symbol)]: 1224,\n    [Symbol(kHandle)]: TLSWrap {\n      _parent: <ref *13> TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [Circular *13],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _parentWrap: <ref *10> Socket {\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: null,\n        _readableState: ReadableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          buffer: BufferList { head: null, tail: null, length: 0 },\n          length: 0,\n          pipes: [Array],\n          flowing: null,\n          ended: false,\n          endEmitted: false,\n          reading: true,\n          constructed: true,\n          sync: false,\n          needReadable: true,\n          emittedReadable: false,\n          readableListening: false,\n          resumeScheduled: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          destroyed: false,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          defaultEncoding: 'utf8',\n          awaitDrainWriters: null,\n          multiAwaitDrain: false,\n          readingMore: false,\n          decoder: null,\n          encoding: null,\n          [Symbol(kPaused)]: null,\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          end: [Function],\n          connect: [Function],\n          error: [Function]\n        },\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: WritableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          finalCalled: false,\n          needDrain: false,\n          ending: false,\n          ended: false,\n          finished: false,\n          destroyed: false,\n          decodeStrings: false,\n          defaultEncoding: 'utf8',\n          length: 0,\n          writing: false,\n          corked: 0,\n          sync: true,\n          bufferProcessing: false,\n          onwrite: [Function],\n          writecb: null,\n          writelen: 0,\n          afterWriteTickInfo: null,\n          buffered: [Array],\n          bufferedIndex: 0,\n          allBuffers: true,\n          allNoop: true,\n          pendingcb: 0,\n          constructed: true,\n          prefinished: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          [Symbol(kOnFinished)]: [Array],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        _server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        [Symbol(async_id_symbol)]: 1223,\n        [Symbol(kHandle)]: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *10],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [readableEnded]: [Getter]\n      },\n      _secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      reading: true,\n      onkeylog: <ref *14> [Function: onkeylog] {\n        [length]: 1,\n        [name]: 'onkeylog',\n        [prototype]: { [constructor]: [Circular *14] }\n      },\n      onhandshakestart: <ref *15> [Function: onhandshakestart] {\n        [length]: 1,\n        [name]: 'onhandshakestart',\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      onhandshakedone: <ref *16> [Function: onhandshakedone] {\n        [length]: 0,\n        [name]: 'onhandshakedone',\n        [prototype]: { [constructor]: [Circular *16] }\n      },\n      onclienthello: <ref *17> [Function: loadSession] {\n        [length]: 1,\n        [name]: 'loadSession',\n        [prototype]: { [constructor]: [Circular *17] }\n      },\n      oncertcb: <ref *18> [Function: loadSNI] {\n        [length]: 1,\n        [name]: 'loadSNI',\n        [prototype]: { [constructor]: [Circular *18] }\n      },\n      onnewsession: <ref *19> [Function: onnewsession] {\n        [length]: 2,\n        [name]: 'onnewsession',\n        [prototype]: { [constructor]: [Circular *19] }\n      },\n      lastHandshakeTime: 47329,\n      handshakes: 0,\n      onerror: <ref *20> [Function: onerror] {\n        [length]: 1,\n        [name]: 'onerror',\n        [prototype]: { [constructor]: [Circular *20] }\n      },\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *21],\n      writeQueueSize: [Getter],\n      [fd]: [Getter],\n      [_externalStream]: [Getter],\n      [bytesRead]: [Getter],\n      [bytesWritten]: [Getter],\n      isStreamBase: true\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: -1,\n      _idlePrev: null,\n      _idleNext: null,\n      _idleStart: 47329,\n      _onTimeout: null,\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: true,\n      [Symbol(refed)]: false,\n      [Symbol(kHasPrimitive)]: false,\n      [Symbol(asyncId)]: 1225,\n      [Symbol(triggerId)]: 236\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(error-emitted)]: false,\n    [Symbol(RequestTimeout)]: undefined,\n    [_connecting]: [Getter],\n    [pending]: [Getter],\n    [readyState]: [Getter],\n    [bufferSize]: [Getter],\n    bytesRead: [Getter],\n    remoteAddress: [Getter],\n    remoteFamily: [Getter],\n    remotePort: [Getter],\n    localAddress: [Getter],\n    localPort: [Getter],\n    _bytesDispatched: [Getter],\n    bytesWritten: [Getter],\n    [_handle]: [Getter/Setter],\n    [Symbol(kUpdateTimer)]: [Getter],\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  rawHeaders: [\n    'user-agent',\n    'vscode-restclient',\n    'content-type',\n    'application/json',\n    'authorization',\n    'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NzUsImV4cCI6MTYxOTI4ODM3NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZmI4MjgzYWYtMGU2ZS00MGMzLThkMTEtNjAyMWE4MjI1MTAyIn0.EcXflXBv_04J57ZpydiVErC-iFpWoBEgSq3_TR4POWleM_4BORhh3wbUV0VaCp5cWAsKgAWKZEgHFFnv5Y7hEt9qxlr5IEnWfViD75gAvVkCqu5vkDNkhi6N7I--0lqO6lEJyPIKnmp_MB7jAxavVGQXoCZTczOiaisJ02PGo_4WKTushG2hvp14IsRaUWIk4FlLnEkHjtbCm87tdRU5rq8jagHlgRFxvsNp2T8yNQ5KdbW89tFQw2fIyXoyl8Wta1txUJDPmTcp1VuCgmJIZ-Uw4X-eq8Y4smHAWT08rtyez0LK6ypOI4igVPrU9N5UPQTjyy_UK-9HNgYjn_GcTQ',\n    'accept-encoding',\n    'gzip, deflate',\n    'content-length',\n    '298',\n    'Host',\n    'localhost:3000',\n    'Connection',\n    'close',\n    [length]: 14\n  ],\n  rawTrailers: [ [length]: 0 ],\n  aborted: false,\n  upgrade: false,\n  url: '/api/gemaelde',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *21> TLSSocket {\n    _tlsOptions: {\n      secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      isServer: true,\n      server: <ref *2> Server {\n        _contexts: [ [length]: 0 ],\n        requestCert: false,\n        rejectUnauthorized: true,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        pfx: undefined,\n        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n        passphrase: undefined,\n        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n        clientCertEngine: undefined,\n        ca: undefined,\n        minVersion: 'TLSv1.3',\n        maxVersion: undefined,\n        secureProtocol: undefined,\n        crl: undefined,\n        sigalgs: undefined,\n        ciphers: undefined,\n        ecdhCurve: undefined,\n        dhparam: undefined,\n        honorCipherOrder: true,\n        secureOptions: undefined,\n        sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n        privateKeyIdentifier: undefined,\n        privateKeyEngine: undefined,\n        _sharedCreds: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          connection: [Function],\n          secureConnection: [Function],\n          request: [Function],\n          tlsClientError: [Function]\n        },\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: TCP {\n          reading: false,\n          onconnection: [Function],\n          [Symbol(owner_symbol)]: [Circular *2],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _usingWorkers: false,\n        _workers: [ [length]: 0 ],\n        _unref: false,\n        allowHalfOpen: false,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 0,\n        keepAliveTimeout: 5000,\n        maxHeadersCount: null,\n        headersTimeout: 60000,\n        requestTimeout: 0,\n        _connectionKey: '6::::3000',\n        [Symbol(IncomingMessage)]: <ref *11> [Function: IncomingMessage] {\n          [length]: 1,\n          [name]: 'IncomingMessage',\n          [prototype]: [Readable],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(ServerResponse)]: <ref *12> [Function: ServerResponse] {\n          [length]: 1,\n          [name]: 'ServerResponse',\n          [prototype]: [OutgoingMessage],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(handshake-timeout)]: 120000,\n        [Symbol(snicallback)]: undefined,\n        [Symbol(pskcallback)]: undefined,\n        [Symbol(pskidentityhint)]: undefined,\n        [Symbol(kCapture)]: false,\n        [Symbol(async_id_symbol)]: 236,\n        [Symbol(enableTrace)]: undefined,\n        listening: [Getter]\n      },\n      requestCert: false,\n      rejectUnauthorized: true,\n      handshakeTimeout: 120000,\n      ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n      SNICallback: <ref *3> [Function: SNICallback] {\n        [length]: 2,\n        [name]: 'SNICallback',\n        [prototype]: { [constructor]: [Circular *3] }\n      },\n      enableTrace: undefined,\n      pauseOnConnect: false,\n      pskCallback: undefined,\n      pskIdentityHint: undefined\n    },\n    _secureEstablished: true,\n    _securePending: false,\n    _newSessionPending: false,\n    _controlReleased: true,\n    secureConnecting: false,\n    _SNICallback: null,\n    servername: 'localhost',\n    alpnProtocol: false,\n    authorized: false,\n    authorizationError: null,\n    encrypted: true,\n    _events: [Object: null prototype] {\n      close: [\n        [Function: onSocketCloseDestroySSL] {\n          [length]: 0,\n          [name]: 'onSocketCloseDestroySSL',\n          [prototype]: [Object]\n        },\n        [Function: onSocketClose] {\n          [length]: 1,\n          [name]: 'onSocketClose',\n          [prototype]: [Object]\n        },\n        [Function: bound socketOnClose] {\n          [length]: 0,\n          [name]: 'bound socketOnClose'\n        },\n        [Function: onServerResponseClose] {\n          [length]: 0,\n          [name]: 'onServerResponseClose',\n          [prototype]: [Object]\n        },\n        [Function: onevent] {\n          [length]: 1,\n          [name]: 'onevent',\n          [prototype]: [Object]\n        },\n        [length]: 5\n      ],\n      end: [\n        [Function: onReadableStreamEnd] {\n          [length]: 0,\n          [name]: 'onReadableStreamEnd',\n          [prototype]: [Object]\n        },\n        [Function: bound socketOnEnd] {\n          [length]: 0,\n          [name]: 'bound socketOnEnd'\n        },\n        [length]: 2\n      ],\n      newListener: <ref *4> [Function: keylogNewListener] {\n        [length]: 1,\n        [name]: 'keylogNewListener',\n        [prototype]: { [constructor]: [Circular *4] }\n      },\n      secure: <ref *5> [Function: onServerSocketSecure] {\n        [length]: 0,\n        [name]: 'onServerSocketSecure',\n        [prototype]: { [constructor]: [Circular *5] }\n      },\n      _tlsError: <ref *6> [Function: onSocketTLSError] {\n        [length]: 1,\n        [name]: 'onSocketTLSError',\n        [prototype]: { [constructor]: [Circular *6] }\n      },\n      timeout: <ref *7> [Function: socketOnTimeout] {\n        [length]: 0,\n        [name]: 'socketOnTimeout',\n        [prototype]: { [constructor]: [Circular *7] }\n      },\n      data: [Function: bound socketOnData] {\n        [length]: 1,\n        [name]: 'bound socketOnData'\n      },\n      error: [\n        [Function: socketOnError] {\n          [length]: 1,\n          [name]: 'socketOnError',\n          [prototype]: [Object]\n        },\n        [Function: onevent] {\n          [length]: 1,\n          [name]: 'onevent',\n          [prototype]: [Object]\n        },\n        [length]: 2\n      ],\n      drain: [Function: bound socketOnDrain] {\n        [length]: 0,\n        [name]: 'bound socketOnDrain'\n      },\n      resume: <ref *8> [Function: onSocketResume] {\n        [length]: 0,\n        [name]: 'onSocketResume',\n        [prototype]: { [constructor]: [Circular *8] }\n      },\n      pause: <ref *9> [Function: onSocketPause] {\n        [length]: 0,\n        [name]: 'onSocketPause',\n        [prototype]: { [constructor]: [Circular *9] }\n      }\n    },\n    _eventsCount: 11,\n    connecting: false,\n    _hadError: false,\n    _parent: <ref *10> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [ [length]: 0 ],\n        flowing: null,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        constructed: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: true,\n        destroyed: false,\n        errored: null,\n        closed: false,\n        closeEmitted: false,\n        defaultEncoding: 'utf8',\n        awaitDrainWriters: null,\n        multiAwaitDrain: false,\n        readingMore: false,\n        decoder: null,\n        encoding: null,\n        [Symbol(kPaused)]: null,\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      [domain]: null,\n      _events: [Object: null prototype] {\n        end: [Function: onReadableStreamEnd] {\n          [length]: 0,\n          [name]: 'onReadableStreamEnd',\n          [prototype]: [Object]\n        },\n        connect: [Function: bound onceWrapper] {\n          [length]: 0,\n          [name]: 'bound onceWrapper',\n          listener: [Function]\n        },\n        error: [Function (anonymous)] { [length]: 1, [name]: '' }\n      },\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _writableState: WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writecb: null,\n        writelen: 0,\n        afterWriteTickInfo: null,\n        buffered: [ [length]: 0 ],\n        bufferedIndex: 0,\n        allBuffers: true,\n        allNoop: true,\n        pendingcb: 0,\n        constructed: true,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: true,\n        errored: null,\n        closed: false,\n        closeEmitted: false,\n        [Symbol(kOnFinished)]: [ [length]: 0 ],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: false,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: <ref *2> Server {\n        _contexts: [ [length]: 0 ],\n        requestCert: false,\n        rejectUnauthorized: true,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        pfx: undefined,\n        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n        passphrase: undefined,\n        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n        clientCertEngine: undefined,\n        ca: undefined,\n        minVersion: 'TLSv1.3',\n        maxVersion: undefined,\n        secureProtocol: undefined,\n        crl: undefined,\n        sigalgs: undefined,\n        ciphers: undefined,\n        ecdhCurve: undefined,\n        dhparam: undefined,\n        honorCipherOrder: true,\n        secureOptions: undefined,\n        sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n        privateKeyIdentifier: undefined,\n        privateKeyEngine: undefined,\n        _sharedCreds: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          connection: [Function],\n          secureConnection: [Function],\n          request: [Function],\n          tlsClientError: [Function]\n        },\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: TCP {\n          reading: false,\n          onconnection: [Function],\n          [Symbol(owner_symbol)]: [Circular *2],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _usingWorkers: false,\n        _workers: [ [length]: 0 ],\n        _unref: false,\n        allowHalfOpen: false,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 0,\n        keepAliveTimeout: 5000,\n        maxHeadersCount: null,\n        headersTimeout: 60000,\n        requestTimeout: 0,\n        _connectionKey: '6::::3000',\n        [Symbol(IncomingMessage)]: <ref *11> [Function: IncomingMessage] {\n          [length]: 1,\n          [name]: 'IncomingMessage',\n          [prototype]: [Readable],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(ServerResponse)]: <ref *12> [Function: ServerResponse] {\n          [length]: 1,\n          [name]: 'ServerResponse',\n          [prototype]: [OutgoingMessage],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(handshake-timeout)]: 120000,\n        [Symbol(snicallback)]: undefined,\n        [Symbol(pskcallback)]: undefined,\n        [Symbol(pskidentityhint)]: undefined,\n        [Symbol(kCapture)]: false,\n        [Symbol(async_id_symbol)]: 236,\n        [Symbol(enableTrace)]: undefined,\n        listening: [Getter]\n      },\n      _server: <ref *2> Server {\n        _contexts: [ [length]: 0 ],\n        requestCert: false,\n        rejectUnauthorized: true,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        pfx: undefined,\n        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n        passphrase: undefined,\n        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n        clientCertEngine: undefined,\n        ca: undefined,\n        minVersion: 'TLSv1.3',\n        maxVersion: undefined,\n        secureProtocol: undefined,\n        crl: undefined,\n        sigalgs: undefined,\n        ciphers: undefined,\n        ecdhCurve: undefined,\n        dhparam: undefined,\n        honorCipherOrder: true,\n        secureOptions: undefined,\n        sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n        privateKeyIdentifier: undefined,\n        privateKeyEngine: undefined,\n        _sharedCreds: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          connection: [Function],\n          secureConnection: [Function],\n          request: [Function],\n          tlsClientError: [Function]\n        },\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: TCP {\n          reading: false,\n          onconnection: [Function],\n          [Symbol(owner_symbol)]: [Circular *2],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _usingWorkers: false,\n        _workers: [ [length]: 0 ],\n        _unref: false,\n        allowHalfOpen: false,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 0,\n        keepAliveTimeout: 5000,\n        maxHeadersCount: null,\n        headersTimeout: 60000,\n        requestTimeout: 0,\n        _connectionKey: '6::::3000',\n        [Symbol(IncomingMessage)]: <ref *11> [Function: IncomingMessage] {\n          [length]: 1,\n          [name]: 'IncomingMessage',\n          [prototype]: [Readable],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(ServerResponse)]: <ref *12> [Function: ServerResponse] {\n          [length]: 1,\n          [name]: 'ServerResponse',\n          [prototype]: [OutgoingMessage],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(handshake-timeout)]: 120000,\n        [Symbol(snicallback)]: undefined,\n        [Symbol(pskcallback)]: undefined,\n        [Symbol(pskidentityhint)]: undefined,\n        [Symbol(kCapture)]: false,\n        [Symbol(async_id_symbol)]: 236,\n        [Symbol(enableTrace)]: undefined,\n        listening: [Getter]\n      },\n      [Symbol(async_id_symbol)]: 1223,\n      [Symbol(kHandle)]: <ref *13> TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: [Circular *10],\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [_connecting]: [Getter],\n      [pending]: [Getter],\n      [readyState]: [Getter],\n      [bufferSize]: [Getter],\n      bytesRead: [Getter],\n      remoteAddress: [Getter],\n      remoteFamily: [Getter],\n      remotePort: [Getter],\n      localAddress: [Getter],\n      localPort: [Getter],\n      _bytesDispatched: [Getter],\n      bytesWritten: [Getter],\n      [_handle]: [Getter/Setter],\n      [Symbol(kUpdateTimer)]: [Getter],\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter],\n      [readable]: [Getter/Setter],\n      [readableHighWaterMark]: [Getter],\n      [readableBuffer]: [Getter],\n      [readableFlowing]: [Getter/Setter],\n      [readableLength]: [Getter],\n      [readableObjectMode]: [Getter],\n      [readableEncoding]: [Getter],\n      [readableEnded]: [Getter]\n    },\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [ [length]: 0 ],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false,\n      [pipesCount]: [Getter],\n      [paused]: [Getter/Setter]\n    },\n    [domain]: null,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite] { [length]: 1, [name]: 'bound onwrite' },\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [ [length]: 0 ],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: [ [length]: 0 ],\n      [bufferedRequestCount]: [Getter]\n    },\n    allowHalfOpen: false,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: <ref *2> Server {\n      _contexts: [ [length]: 0 ],\n      requestCert: false,\n      rejectUnauthorized: true,\n      ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n      pfx: undefined,\n      key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n      passphrase: undefined,\n      cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n      clientCertEngine: undefined,\n      ca: undefined,\n      minVersion: 'TLSv1.3',\n      maxVersion: undefined,\n      secureProtocol: undefined,\n      crl: undefined,\n      sigalgs: undefined,\n      ciphers: undefined,\n      ecdhCurve: undefined,\n      dhparam: undefined,\n      honorCipherOrder: true,\n      secureOptions: undefined,\n      sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n      privateKeyIdentifier: undefined,\n      privateKeyEngine: undefined,\n      _sharedCreds: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      [domain]: null,\n      _events: [Object: null prototype] {\n        connection: [Function: tlsConnectionListener] {\n          [length]: 1,\n          [name]: 'tlsConnectionListener',\n          [prototype]: [Object]\n        },\n        secureConnection: [Function: connectionListener] {\n          [length]: 1,\n          [name]: 'connectionListener',\n          [prototype]: [Object]\n        },\n        request: [Function: app] {\n          [length]: 3,\n          [name]: 'app',\n          [prototype]: [Object],\n          [constructor]: [Function],\n          _events: [Object: null prototype],\n          _eventsCount: 1,\n          _maxListeners: undefined,\n          setMaxListeners: [Function],\n          getMaxListeners: [Function],\n          emit: [Function],\n          addListener: [Function],\n          on: [Function],\n          prependListener: [Function],\n          once: [Function],\n          prependOnceListener: [Function],\n          removeListener: [Function],\n          off: [Function],\n          removeAllListeners: [Function],\n          listeners: [Function],\n          rawListeners: [Function],\n          listenerCount: [Function],\n          eventNames: [Function],\n          init: [Function],\n          defaultConfiguration: [Function],\n          lazyrouter: [Function],\n          handle: [Function],\n          use: [Function],\n          route: [Function],\n          engine: [Function],\n          param: [Function],\n          set: [Function],\n          path: [Function],\n          enabled: [Function],\n          disabled: [Function],\n          enable: [Function],\n          disable: [Function],\n          acl: [Function],\n          bind: [Function],\n          checkout: [Function],\n          connect: [Function],\n          copy: [Function],\n          delete: [Function],\n          get: [Function],\n          head: [Function],\n          link: [Function],\n          lock: [Function],\n          'm-search': [Function],\n          merge: [Function],\n          mkactivity: [Function],\n          mkcalendar: [Function],\n          mkcol: [Function],\n          move: [Function],\n          notify: [Function],\n          options: [Function],\n          patch: [Function],\n          post: [Function],\n          pri: [Function],\n          propfind: [Function],\n          proppatch: [Function],\n          purge: [Function],\n          put: [Function],\n          rebind: [Function],\n          report: [Function],\n          search: [Function],\n          source: [Function],\n          subscribe: [Function],\n          trace: [Function],\n          unbind: [Function],\n          unlink: [Function],\n          unlock: [Function],\n          unsubscribe: [Function],\n          all: [Function],\n          del: [Function],\n          render: [Function],\n          listen: [Function],\n          request: [IncomingMessage],\n          response: [ServerResponse],\n          cache: {},\n          engines: {},\n          settings: [Object],\n          locals: [Object: null prototype],\n          mountpath: '/',\n          [router]: [Getter],\n          _router: [Function]\n        },\n        tlsClientError: [Function: addListener] {\n          [length]: 2,\n          [name]: 'addListener',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: TCP {\n        reading: false,\n        onconnection: [Function: onconnection] {\n          [length]: 2,\n          [name]: 'onconnection',\n          [prototype]: [Object]\n        },\n        [Symbol(owner_symbol)]: [Circular *2],\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _usingWorkers: false,\n      _workers: [ [length]: 0 ],\n      _unref: false,\n      allowHalfOpen: false,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::3000',\n      [Symbol(IncomingMessage)]: <ref *11> [Function: IncomingMessage] {\n        [length]: 1,\n        [name]: 'IncomingMessage',\n        [prototype]: Readable {\n          [constructor]: [Circular *11],\n          [connection]: [Getter/Setter],\n          [headers]: [Getter/Setter],\n          [trailers]: [Getter/Setter],\n          setTimeout: [Function],\n          _read: [Function],\n          destroy: [Function],\n          _addHeaderLines: [Function],\n          _addHeaderLine: [Function],\n          _dump: [Function],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readableEnded]: [Getter],\n          _events: undefined,\n          _eventsCount: 0,\n          _maxListeners: undefined,\n          [Symbol(kCapture)]: false\n        },\n        promises: [Getter],\n        usingDomains: true,\n        captureRejectionSymbol: Symbol(nodejs.rejection),\n        captureRejections: [Getter/Setter],\n        errorMonitor: Symbol(events.errorMonitor),\n        defaultMaxListeners: [Getter/Setter],\n        [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n        [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n      },\n      [Symbol(ServerResponse)]: <ref *12> [Function: ServerResponse] {\n        [length]: 1,\n        [name]: 'ServerResponse',\n        [prototype]: OutgoingMessage {\n          [constructor]: [Circular *12],\n          _finish: [Function],\n          statusCode: 200,\n          statusMessage: undefined,\n          assignSocket: [Function],\n          detachSocket: [Function],\n          writeContinue: [Function],\n          writeProcessing: [Function],\n          _implicitHeader: [Function],\n          writeHead: [Function],\n          writeHeader: [Function],\n          [writableFinished]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableLength]: [Getter],\n          [writableHighWaterMark]: [Getter],\n          [writableCorked]: [Getter],\n          [_headers]: [Getter/Setter],\n          [connection]: [Getter/Setter],\n          [_headerNames]: [Getter/Setter],\n          headersSent: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          _events: undefined,\n          _eventsCount: 0,\n          _maxListeners: undefined,\n          [Symbol(kCapture)]: false\n        },\n        promises: [Getter],\n        usingDomains: true,\n        captureRejectionSymbol: Symbol(nodejs.rejection),\n        captureRejections: [Getter/Setter],\n        errorMonitor: Symbol(events.errorMonitor),\n        defaultMaxListeners: [Getter/Setter],\n        [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n        [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n      },\n      [Symbol(handshake-timeout)]: 120000,\n      [Symbol(snicallback)]: undefined,\n      [Symbol(pskcallback)]: undefined,\n      [Symbol(pskidentityhint)]: undefined,\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 236,\n      [Symbol(enableTrace)]: undefined,\n      listening: [Getter]\n    },\n    _server: null,\n    ssl: TLSWrap {\n      _parent: <ref *13> TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [Circular *13],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _parentWrap: <ref *10> Socket {\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: null,\n        _readableState: ReadableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          buffer: BufferList { head: null, tail: null, length: 0 },\n          length: 0,\n          pipes: [Array],\n          flowing: null,\n          ended: false,\n          endEmitted: false,\n          reading: true,\n          constructed: true,\n          sync: false,\n          needReadable: true,\n          emittedReadable: false,\n          readableListening: false,\n          resumeScheduled: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          destroyed: false,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          defaultEncoding: 'utf8',\n          awaitDrainWriters: null,\n          multiAwaitDrain: false,\n          readingMore: false,\n          decoder: null,\n          encoding: null,\n          [Symbol(kPaused)]: null,\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          end: [Function],\n          connect: [Function],\n          error: [Function]\n        },\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: WritableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          finalCalled: false,\n          needDrain: false,\n          ending: false,\n          ended: false,\n          finished: false,\n          destroyed: false,\n          decodeStrings: false,\n          defaultEncoding: 'utf8',\n          length: 0,\n          writing: false,\n          corked: 0,\n          sync: true,\n          bufferProcessing: false,\n          onwrite: [Function],\n          writecb: null,\n          writelen: 0,\n          afterWriteTickInfo: null,\n          buffered: [Array],\n          bufferedIndex: 0,\n          allBuffers: true,\n          allNoop: true,\n          pendingcb: 0,\n          constructed: true,\n          prefinished: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          [Symbol(kOnFinished)]: [Array],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        _server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        [Symbol(async_id_symbol)]: 1223,\n        [Symbol(kHandle)]: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *10],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [readableEnded]: [Getter]\n      },\n      _secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      reading: true,\n      onkeylog: <ref *14> [Function: onkeylog] {\n        [length]: 1,\n        [name]: 'onkeylog',\n        [prototype]: { [constructor]: [Circular *14] }\n      },\n      onhandshakestart: <ref *15> [Function: onhandshakestart] {\n        [length]: 1,\n        [name]: 'onhandshakestart',\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      onhandshakedone: <ref *16> [Function: onhandshakedone] {\n        [length]: 0,\n        [name]: 'onhandshakedone',\n        [prototype]: { [constructor]: [Circular *16] }\n      },\n      onclienthello: <ref *17> [Function: loadSession] {\n        [length]: 1,\n        [name]: 'loadSession',\n        [prototype]: { [constructor]: [Circular *17] }\n      },\n      oncertcb: <ref *18> [Function: loadSNI] {\n        [length]: 1,\n        [name]: 'loadSNI',\n        [prototype]: { [constructor]: [Circular *18] }\n      },\n      onnewsession: <ref *19> [Function: onnewsession] {\n        [length]: 2,\n        [name]: 'onnewsession',\n        [prototype]: { [constructor]: [Circular *19] }\n      },\n      lastHandshakeTime: 47329,\n      handshakes: 0,\n      onerror: <ref *20> [Function: onerror] {\n        [length]: 1,\n        [name]: 'onerror',\n        [prototype]: { [constructor]: [Circular *20] }\n      },\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *21],\n      writeQueueSize: [Getter],\n      [fd]: [Getter],\n      [_externalStream]: [Getter],\n      [bytesRead]: [Getter],\n      [bytesWritten]: [Getter],\n      isStreamBase: true\n    },\n    _requestCert: false,\n    _rejectUnauthorized: true,\n    timeout: 0,\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout] {\n        [length]: 0,\n        [name]: 'bound setRequestTimeout'\n      },\n      '1': <ref *22> [Function: parserOnHeaders] {\n        [length]: 2,\n        [name]: 'parserOnHeaders',\n        [prototype]: { [constructor]: [Circular *22] }\n      },\n      '2': <ref *23> [Function: parserOnHeadersComplete] {\n        [length]: 9,\n        [name]: 'parserOnHeadersComplete',\n        [prototype]: { [constructor]: [Circular *23] }\n      },\n      '3': <ref *24> [Function: parserOnBody] {\n        [length]: 3,\n        [name]: 'parserOnBody',\n        [prototype]: { [constructor]: [Circular *24] }\n      },\n      '4': <ref *25> [Function: parserOnMessageComplete] {\n        [length]: 0,\n        [name]: 'parserOnMessageComplete',\n        [prototype]: { [constructor]: [Circular *25] }\n      },\n      '5': [Function: bound onParserExecute] {\n        [length]: 1,\n        [name]: 'bound onParserExecute'\n      },\n      '6': [Function: bound onParserTimeout] {\n        [length]: 0,\n        [name]: 'bound onParserTimeout'\n      },\n      _headers: [ [length]: 0 ],\n      _url: '',\n      socket: [Circular *21],\n      incoming: [Circular *26],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming] {\n        [length]: 2,\n        [name]: 'bound parserOnIncoming'\n      },\n      [Symbol(resource_symbol)]: HTTPServerAsyncResource {\n        type: 'HTTPINCOMINGMESSAGE',\n        socket: [Circular *21]\n      }\n    },\n    on: <ref *27> [Function: socketListenerWrap] {\n      [length]: 2,\n      [name]: 'socketListenerWrap',\n      [prototype]: { [constructor]: [Circular *27] }\n    },\n    addListener: <ref *28> [Function: socketListenerWrap] {\n      [length]: 2,\n      [name]: 'socketListenerWrap',\n      [prototype]: { [constructor]: [Circular *28] }\n    },\n    prependListener: <ref *29> [Function: socketListenerWrap] {\n      [length]: 2,\n      [name]: 'socketListenerWrap',\n      [prototype]: { [constructor]: [Circular *29] }\n    },\n    setEncoding: <ref *30> [Function: socketSetEncoding] {\n      [length]: 0,\n      [name]: 'socketSetEncoding',\n      [prototype]: { [constructor]: [Circular *30] }\n    },\n    _paused: false,\n    _httpMessage: ServerResponse {\n      [domain]: null,\n      _events: [Object: null prototype] {\n        finish: [ [Function], [Function], [length]: 2 ],\n        end: [Function: onevent] {\n          [length]: 1,\n          [name]: 'onevent',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      outputData: [ [length]: 0 ],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *21],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData] {\n        [length]: 1,\n        [name]: 'bound updateOutgoingData'\n      },\n      req: [Circular *26],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      _startAt: undefined,\n      _startTime: undefined,\n      writeHead: <ref *31> [Function: writeHead] {\n        [length]: 1,\n        [name]: 'writeHead',\n        [prototype]: { [constructor]: [Circular *31] }\n      },\n      __onFinished: <ref *32> [Function: listener] {\n        [length]: 1,\n        [name]: 'listener',\n        [prototype]: { [constructor]: [Circular *32] },\n        queue: [ [Function], [length]: 1 ]\n      },\n      flush: <ref *33> [Function: flush] {\n        [length]: 0,\n        [name]: 'flush',\n        [prototype]: { [constructor]: [Circular *33] }\n      },\n      write: <ref *34> [Function: write] {\n        [length]: 2,\n        [name]: 'write',\n        [prototype]: { [constructor]: [Circular *34] }\n      },\n      end: <ref *35> [Function: end] {\n        [length]: 2,\n        [name]: 'end',\n        [prototype]: { [constructor]: [Circular *35] }\n      },\n      on: <ref *36> [Function: on] {\n        [length]: 2,\n        [name]: 'on',\n        [prototype]: { [constructor]: [Circular *36] }\n      },\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype] {\n        'content-security-policy': [\n          'Content-Security-Policy',\n          \"default-src https: 'self';style-src https: 'unsafe-inline';script-src https: 'unsafe-inline' 'unsafe-eval';img-src data: 'self'\",\n          [length]: 2\n        ],\n        'x-xss-protection': [ 'X-XSS-Protection', '0', [length]: 2 ],\n        'x-frame-options': [ 'X-Frame-Options', 'SAMEORIGIN', [length]: 2 ],\n        'strict-transport-security': [\n          'Strict-Transport-Security',\n          'max-age=15552000; includeSubDomains',\n          [length]: 2\n        ],\n        'x-content-type-options': [ 'X-Content-Type-Options', 'nosniff', [length]: 2 ],\n        'x-ratelimit-limit': [ 'X-RateLimit-Limit', 100, [length]: 2 ],\n        'x-ratelimit-remaining': [ 'X-RateLimit-Remaining', 93, [length]: 2 ],\n        date: [ 'Date', 'Fri, 23 Apr 2021 18:19:38 GMT', [length]: 2 ],\n        'x-ratelimit-reset': [ 'X-RateLimit-Reset', 1619202842, [length]: 2 ]\n      },\n      statusCode: 200,\n      statusMessage: undefined\n    },\n    _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 55457 },\n    [Symbol(res)]: TLSWrap {\n      _parent: <ref *13> TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [Circular *13],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _parentWrap: <ref *10> Socket {\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: null,\n        _readableState: ReadableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          buffer: BufferList { head: null, tail: null, length: 0 },\n          length: 0,\n          pipes: [Array],\n          flowing: null,\n          ended: false,\n          endEmitted: false,\n          reading: true,\n          constructed: true,\n          sync: false,\n          needReadable: true,\n          emittedReadable: false,\n          readableListening: false,\n          resumeScheduled: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          destroyed: false,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          defaultEncoding: 'utf8',\n          awaitDrainWriters: null,\n          multiAwaitDrain: false,\n          readingMore: false,\n          decoder: null,\n          encoding: null,\n          [Symbol(kPaused)]: null,\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          end: [Function],\n          connect: [Function],\n          error: [Function]\n        },\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: WritableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          finalCalled: false,\n          needDrain: false,\n          ending: false,\n          ended: false,\n          finished: false,\n          destroyed: false,\n          decodeStrings: false,\n          defaultEncoding: 'utf8',\n          length: 0,\n          writing: false,\n          corked: 0,\n          sync: true,\n          bufferProcessing: false,\n          onwrite: [Function],\n          writecb: null,\n          writelen: 0,\n          afterWriteTickInfo: null,\n          buffered: [Array],\n          bufferedIndex: 0,\n          allBuffers: true,\n          allNoop: true,\n          pendingcb: 0,\n          constructed: true,\n          prefinished: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          [Symbol(kOnFinished)]: [Array],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        _server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        [Symbol(async_id_symbol)]: 1223,\n        [Symbol(kHandle)]: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *10],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [readableEnded]: [Getter]\n      },\n      _secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      reading: true,\n      onkeylog: <ref *14> [Function: onkeylog] {\n        [length]: 1,\n        [name]: 'onkeylog',\n        [prototype]: { [constructor]: [Circular *14] }\n      },\n      onhandshakestart: <ref *15> [Function: onhandshakestart] {\n        [length]: 1,\n        [name]: 'onhandshakestart',\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      onhandshakedone: <ref *16> [Function: onhandshakedone] {\n        [length]: 0,\n        [name]: 'onhandshakedone',\n        [prototype]: { [constructor]: [Circular *16] }\n      },\n      onclienthello: <ref *17> [Function: loadSession] {\n        [length]: 1,\n        [name]: 'loadSession',\n        [prototype]: { [constructor]: [Circular *17] }\n      },\n      oncertcb: <ref *18> [Function: loadSNI] {\n        [length]: 1,\n        [name]: 'loadSNI',\n        [prototype]: { [constructor]: [Circular *18] }\n      },\n      onnewsession: <ref *19> [Function: onnewsession] {\n        [length]: 2,\n        [name]: 'onnewsession',\n        [prototype]: { [constructor]: [Circular *19] }\n      },\n      lastHandshakeTime: 47329,\n      handshakes: 0,\n      onerror: <ref *20> [Function: onerror] {\n        [length]: 1,\n        [name]: 'onerror',\n        [prototype]: { [constructor]: [Circular *20] }\n      },\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *21],\n      writeQueueSize: [Getter],\n      [fd]: [Getter],\n      [_externalStream]: [Getter],\n      [bytesRead]: [Getter],\n      [bytesWritten]: [Getter],\n      isStreamBase: true\n    },\n    [Symbol(verified)]: false,\n    [Symbol(pendingSession)]: null,\n    [Symbol(async_id_symbol)]: 1224,\n    [Symbol(kHandle)]: TLSWrap {\n      _parent: <ref *13> TCP {\n        reading: [Getter/Setter],\n        onconnection: null,\n        [Symbol(owner_symbol)]: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [Circular *13],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        [owner]: [Getter/Setter],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _parentWrap: <ref *10> Socket {\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: null,\n        _readableState: ReadableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          buffer: BufferList { head: null, tail: null, length: 0 },\n          length: 0,\n          pipes: [Array],\n          flowing: null,\n          ended: false,\n          endEmitted: false,\n          reading: true,\n          constructed: true,\n          sync: false,\n          needReadable: true,\n          emittedReadable: false,\n          readableListening: false,\n          resumeScheduled: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          destroyed: false,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          defaultEncoding: 'utf8',\n          awaitDrainWriters: null,\n          multiAwaitDrain: false,\n          readingMore: false,\n          decoder: null,\n          encoding: null,\n          [Symbol(kPaused)]: null,\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          end: [Function],\n          connect: [Function],\n          error: [Function]\n        },\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: WritableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          finalCalled: false,\n          needDrain: false,\n          ending: false,\n          ended: false,\n          finished: false,\n          destroyed: false,\n          decodeStrings: false,\n          defaultEncoding: 'utf8',\n          length: 0,\n          writing: false,\n          corked: 0,\n          sync: true,\n          bufferProcessing: false,\n          onwrite: [Function],\n          writecb: null,\n          writelen: 0,\n          afterWriteTickInfo: null,\n          buffered: [Array],\n          bufferedIndex: 0,\n          allBuffers: true,\n          allNoop: true,\n          pendingcb: 0,\n          constructed: true,\n          prefinished: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          [Symbol(kOnFinished)]: [Array],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        _server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        [Symbol(async_id_symbol)]: 1223,\n        [Symbol(kHandle)]: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *10],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [readableEnded]: [Getter]\n      },\n      _secureContext: SecureContext {\n        context: SecureContext { _external: [Getter] },\n        alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n      },\n      reading: true,\n      onkeylog: <ref *14> [Function: onkeylog] {\n        [length]: 1,\n        [name]: 'onkeylog',\n        [prototype]: { [constructor]: [Circular *14] }\n      },\n      onhandshakestart: <ref *15> [Function: onhandshakestart] {\n        [length]: 1,\n        [name]: 'onhandshakestart',\n        [prototype]: { [constructor]: [Circular *15] }\n      },\n      onhandshakedone: <ref *16> [Function: onhandshakedone] {\n        [length]: 0,\n        [name]: 'onhandshakedone',\n        [prototype]: { [constructor]: [Circular *16] }\n      },\n      onclienthello: <ref *17> [Function: loadSession] {\n        [length]: 1,\n        [name]: 'loadSession',\n        [prototype]: { [constructor]: [Circular *17] }\n      },\n      oncertcb: <ref *18> [Function: loadSNI] {\n        [length]: 1,\n        [name]: 'loadSNI',\n        [prototype]: { [constructor]: [Circular *18] }\n      },\n      onnewsession: <ref *19> [Function: onnewsession] {\n        [length]: 2,\n        [name]: 'onnewsession',\n        [prototype]: { [constructor]: [Circular *19] }\n      },\n      lastHandshakeTime: 47329,\n      handshakes: 0,\n      onerror: <ref *20> [Function: onerror] {\n        [length]: 1,\n        [name]: 'onerror',\n        [prototype]: { [constructor]: [Circular *20] }\n      },\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *21],\n      writeQueueSize: [Getter],\n      [fd]: [Getter],\n      [_externalStream]: [Getter],\n      [bytesRead]: [Getter],\n      [bytesWritten]: [Getter],\n      isStreamBase: true\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: -1,\n      _idlePrev: null,\n      _idleNext: null,\n      _idleStart: 47329,\n      _onTimeout: null,\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: true,\n      [Symbol(refed)]: false,\n      [Symbol(kHasPrimitive)]: false,\n      [Symbol(asyncId)]: 1225,\n      [Symbol(triggerId)]: 236\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(error-emitted)]: false,\n    [Symbol(RequestTimeout)]: undefined,\n    [_connecting]: [Getter],\n    [pending]: [Getter],\n    [readyState]: [Getter],\n    [bufferSize]: [Getter],\n    bytesRead: [Getter],\n    remoteAddress: [Getter],\n    remoteFamily: [Getter],\n    remotePort: [Getter],\n    localAddress: [Getter],\n    localPort: [Getter],\n    _bytesDispatched: [Getter],\n    bytesWritten: [Getter],\n    [_handle]: [Getter/Setter],\n    [Symbol(kUpdateTimer)]: [Getter],\n    [writable]: [Getter/Setter],\n    [writableHighWaterMark]: [Getter],\n    [writableObjectMode]: [Getter],\n    [writableBuffer]: [Getter],\n    [writableLength]: [Getter],\n    [writableFinished]: [Getter],\n    [writableCorked]: [Getter],\n    [writableEnded]: [Getter],\n    [writableNeedDrain]: [Getter],\n    [destroyed]: [Getter/Setter]\n  },\n  _consuming: false,\n  _dumped: false,\n  next: <ref *37> [Function: next] {\n    [length]: 1,\n    [name]: 'next',\n    [prototype]: { [constructor]: [Circular *37] }\n  },\n  baseUrl: '',\n  originalUrl: '/api/gemaelde',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/api/gemaelde',\n    path: '/api/gemaelde',\n    href: '/api/gemaelde',\n    _raw: '/api/gemaelde'\n  },\n  params: {},\n  query: {},\n  res: <ref *39> ServerResponse {\n    [domain]: null,\n    _events: [Object: null prototype] {\n      finish: [\n        [Function: bound resOnFinish] {\n          [length]: 0,\n          [name]: 'bound resOnFinish'\n        },\n        [Function: onevent] {\n          [length]: 1,\n          [name]: 'onevent',\n          [prototype]: [Object]\n        },\n        [length]: 2\n      ],\n      end: <ref *38> [Function: onevent] {\n        [length]: 1,\n        [name]: 'onevent',\n        [prototype]: { [constructor]: [Circular *38] }\n      }\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    outputData: [ [length]: 0 ],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *21> TLSSocket {\n      _tlsOptions: {\n        secureContext: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        isServer: true,\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        requestCert: false,\n        rejectUnauthorized: true,\n        handshakeTimeout: 120000,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        SNICallback: <ref *3> [Function: SNICallback] {\n          [length]: 2,\n          [name]: 'SNICallback',\n          [prototype]: [Object]\n        },\n        enableTrace: undefined,\n        pauseOnConnect: false,\n        pskCallback: undefined,\n        pskIdentityHint: undefined\n      },\n      _secureEstablished: true,\n      _securePending: false,\n      _newSessionPending: false,\n      _controlReleased: true,\n      secureConnecting: false,\n      _SNICallback: null,\n      servername: 'localhost',\n      alpnProtocol: false,\n      authorized: false,\n      authorizationError: null,\n      encrypted: true,\n      _events: [Object: null prototype] {\n        close: [\n          [Function],\n          [Function],\n          [Function],\n          [Function],\n          [Function],\n          [length]: 5\n        ],\n        end: [ [Function], [Function], [length]: 2 ],\n        newListener: <ref *4> [Function: keylogNewListener] {\n          [length]: 1,\n          [name]: 'keylogNewListener',\n          [prototype]: [Object]\n        },\n        secure: <ref *5> [Function: onServerSocketSecure] {\n          [length]: 0,\n          [name]: 'onServerSocketSecure',\n          [prototype]: [Object]\n        },\n        _tlsError: <ref *6> [Function: onSocketTLSError] {\n          [length]: 1,\n          [name]: 'onSocketTLSError',\n          [prototype]: [Object]\n        },\n        timeout: <ref *7> [Function: socketOnTimeout] {\n          [length]: 0,\n          [name]: 'socketOnTimeout',\n          [prototype]: [Object]\n        },\n        data: [Function: bound socketOnData] {\n          [length]: 1,\n          [name]: 'bound socketOnData'\n        },\n        error: [ [Function], [Function], [length]: 2 ],\n        drain: [Function: bound socketOnDrain] {\n          [length]: 0,\n          [name]: 'bound socketOnDrain'\n        },\n        resume: <ref *8> [Function: onSocketResume] {\n          [length]: 0,\n          [name]: 'onSocketResume',\n          [prototype]: [Object]\n        },\n        pause: <ref *9> [Function: onSocketPause] {\n          [length]: 0,\n          [name]: 'onSocketPause',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 11,\n      connecting: false,\n      _hadError: false,\n      _parent: <ref *10> Socket {\n        connecting: false,\n        _hadError: false,\n        _parent: null,\n        _host: null,\n        _readableState: ReadableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          buffer: BufferList { head: null, tail: null, length: 0 },\n          length: 0,\n          pipes: [Array],\n          flowing: null,\n          ended: false,\n          endEmitted: false,\n          reading: true,\n          constructed: true,\n          sync: false,\n          needReadable: true,\n          emittedReadable: false,\n          readableListening: false,\n          resumeScheduled: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          destroyed: false,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          defaultEncoding: 'utf8',\n          awaitDrainWriters: null,\n          multiAwaitDrain: false,\n          readingMore: false,\n          decoder: null,\n          encoding: null,\n          [Symbol(kPaused)]: null,\n          [pipesCount]: [Getter],\n          [paused]: [Getter/Setter]\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          end: [Function],\n          connect: [Function],\n          error: [Function]\n        },\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: WritableState {\n          objectMode: false,\n          highWaterMark: 16384,\n          finalCalled: false,\n          needDrain: false,\n          ending: false,\n          ended: false,\n          finished: false,\n          destroyed: false,\n          decodeStrings: false,\n          defaultEncoding: 'utf8',\n          length: 0,\n          writing: false,\n          corked: 0,\n          sync: true,\n          bufferProcessing: false,\n          onwrite: [Function],\n          writecb: null,\n          writelen: 0,\n          afterWriteTickInfo: null,\n          buffered: [Array],\n          bufferedIndex: 0,\n          allBuffers: true,\n          allNoop: true,\n          pendingcb: 0,\n          constructed: true,\n          prefinished: false,\n          errorEmitted: false,\n          emitClose: false,\n          autoDestroy: true,\n          errored: null,\n          closed: false,\n          closeEmitted: false,\n          [Symbol(kOnFinished)]: [Array],\n          [bufferedRequestCount]: [Getter]\n        },\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        _server: <ref *2> Server {\n          _contexts: [Array],\n          requestCert: false,\n          rejectUnauthorized: true,\n          ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n          pfx: undefined,\n          key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n          passphrase: undefined,\n          cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n          clientCertEngine: undefined,\n          ca: undefined,\n          minVersion: 'TLSv1.3',\n          maxVersion: undefined,\n          secureProtocol: undefined,\n          crl: undefined,\n          sigalgs: undefined,\n          ciphers: undefined,\n          ecdhCurve: undefined,\n          dhparam: undefined,\n          honorCipherOrder: true,\n          secureOptions: undefined,\n          sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n          privateKeyIdentifier: undefined,\n          privateKeyEngine: undefined,\n          _sharedCreds: [SecureContext],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 4,\n          _maxListeners: undefined,\n          _connections: 1,\n          _handle: [TCP],\n          _usingWorkers: false,\n          _workers: [Array],\n          _unref: false,\n          allowHalfOpen: false,\n          pauseOnConnect: false,\n          httpAllowHalfOpen: false,\n          timeout: 0,\n          keepAliveTimeout: 5000,\n          maxHeadersCount: null,\n          headersTimeout: 60000,\n          requestTimeout: 0,\n          _connectionKey: '6::::3000',\n          [Symbol(IncomingMessage)]: [Function],\n          [Symbol(ServerResponse)]: [Function],\n          [Symbol(handshake-timeout)]: 120000,\n          [Symbol(snicallback)]: undefined,\n          [Symbol(pskcallback)]: undefined,\n          [Symbol(pskidentityhint)]: undefined,\n          [Symbol(kCapture)]: false,\n          [Symbol(async_id_symbol)]: 236,\n          [Symbol(enableTrace)]: undefined,\n          listening: [Getter]\n        },\n        [Symbol(async_id_symbol)]: 1223,\n        [Symbol(kHandle)]: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Circular *10],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        [Symbol(kSetNoDelay)]: false,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBuffer)]: null,\n        [Symbol(kBufferCb)]: null,\n        [Symbol(kBufferGen)]: null,\n        [Symbol(kCapture)]: false,\n        [Symbol(kBytesRead)]: 0,\n        [Symbol(kBytesWritten)]: 0,\n        [_connecting]: [Getter],\n        [pending]: [Getter],\n        [readyState]: [Getter],\n        [bufferSize]: [Getter],\n        bytesRead: [Getter],\n        remoteAddress: [Getter],\n        remoteFamily: [Getter],\n        remotePort: [Getter],\n        localAddress: [Getter],\n        localPort: [Getter],\n        _bytesDispatched: [Getter],\n        bytesWritten: [Getter],\n        [_handle]: [Getter/Setter],\n        [Symbol(kUpdateTimer)]: [Getter],\n        [writable]: [Getter/Setter],\n        [writableHighWaterMark]: [Getter],\n        [writableObjectMode]: [Getter],\n        [writableBuffer]: [Getter],\n        [writableLength]: [Getter],\n        [writableFinished]: [Getter],\n        [writableCorked]: [Getter],\n        [writableEnded]: [Getter],\n        [writableNeedDrain]: [Getter],\n        [destroyed]: [Getter/Setter],\n        [readable]: [Getter/Setter],\n        [readableHighWaterMark]: [Getter],\n        [readableBuffer]: [Getter],\n        [readableFlowing]: [Getter/Setter],\n        [readableLength]: [Getter],\n        [readableObjectMode]: [Getter],\n        [readableEncoding]: [Getter],\n        [readableEnded]: [Getter]\n      },\n      _host: null,\n      _readableState: ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [ [length]: 0 ],\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        constructed: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: true,\n        destroyed: false,\n        errored: null,\n        closed: false,\n        closeEmitted: false,\n        defaultEncoding: 'utf8',\n        awaitDrainWriters: null,\n        multiAwaitDrain: false,\n        readingMore: false,\n        decoder: null,\n        encoding: null,\n        [Symbol(kPaused)]: false,\n        [pipesCount]: [Getter],\n        [paused]: [Getter/Setter]\n      },\n      [domain]: null,\n      _maxListeners: undefined,\n      _writableState: WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite] {\n          [length]: 1,\n          [name]: 'bound onwrite'\n        },\n        writecb: null,\n        writelen: 0,\n        afterWriteTickInfo: null,\n        buffered: [ [length]: 0 ],\n        bufferedIndex: 0,\n        allBuffers: true,\n        allNoop: true,\n        pendingcb: 0,\n        constructed: true,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: true,\n        errored: null,\n        closed: false,\n        closeEmitted: false,\n        [Symbol(kOnFinished)]: [ [length]: 0 ],\n        [bufferedRequestCount]: [Getter]\n      },\n      allowHalfOpen: false,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: <ref *2> Server {\n        _contexts: [ [length]: 0 ],\n        requestCert: false,\n        rejectUnauthorized: true,\n        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,\n        pfx: undefined,\n        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,\n        passphrase: undefined,\n        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 45 68 6a 43 43 41 32 36 67 41 77 49 42 41 67 49 55 59 77 ... 1581 more bytes>,\n        clientCertEngine: undefined,\n        ca: undefined,\n        minVersion: 'TLSv1.3',\n        maxVersion: undefined,\n        secureProtocol: undefined,\n        crl: undefined,\n        sigalgs: undefined,\n        ciphers: undefined,\n        ecdhCurve: undefined,\n        dhparam: undefined,\n        honorCipherOrder: true,\n        secureOptions: undefined,\n        sessionIdContext: 'a6d58aa3e508d100a09a85c788e19075',\n        privateKeyIdentifier: undefined,\n        privateKeyEngine: undefined,\n        _sharedCreds: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        [domain]: null,\n        _events: [Object: null prototype] {\n          connection: [Function],\n          secureConnection: [Function],\n          request: [Function],\n          tlsClientError: [Function]\n        },\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: TCP {\n          reading: false,\n          onconnection: [Function],\n          [Symbol(owner_symbol)]: [Circular *2],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _usingWorkers: false,\n        _workers: [ [length]: 0 ],\n        _unref: false,\n        allowHalfOpen: false,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 0,\n        keepAliveTimeout: 5000,\n        maxHeadersCount: null,\n        headersTimeout: 60000,\n        requestTimeout: 0,\n        _connectionKey: '6::::3000',\n        [Symbol(IncomingMessage)]: <ref *11> [Function: IncomingMessage] {\n          [length]: 1,\n          [name]: 'IncomingMessage',\n          [prototype]: [Readable],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(ServerResponse)]: <ref *12> [Function: ServerResponse] {\n          [length]: 1,\n          [name]: 'ServerResponse',\n          [prototype]: [OutgoingMessage],\n          promises: [Getter],\n          usingDomains: true,\n          captureRejectionSymbol: Symbol(nodejs.rejection),\n          captureRejections: [Getter/Setter],\n          errorMonitor: Symbol(events.errorMonitor),\n          defaultMaxListeners: [Getter/Setter],\n          [kMaxEventTargetListeners]: Symbol(events.maxEventTargetListeners),\n          [kMaxEventTargetListenersWarned]: Symbol(events.maxEventTargetListenersWarned)\n        },\n        [Symbol(handshake-timeout)]: 120000,\n        [Symbol(snicallback)]: undefined,\n        [Symbol(pskcallback)]: undefined,\n        [Symbol(pskidentityhint)]: undefined,\n        [Symbol(kCapture)]: false,\n        [Symbol(async_id_symbol)]: 236,\n        [Symbol(enableTrace)]: undefined,\n        listening: [Getter]\n      },\n      _server: null,\n      ssl: TLSWrap {\n        _parent: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Socket],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _parentWrap: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [TCP],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        _secureContext: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        reading: true,\n        onkeylog: <ref *14> [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: <ref *15> [Function: onhandshakestart] {\n          [length]: 1,\n          [name]: 'onhandshakestart',\n          [prototype]: [Object]\n        },\n        onhandshakedone: <ref *16> [Function: onhandshakedone] {\n          [length]: 0,\n          [name]: 'onhandshakedone',\n          [prototype]: [Object]\n        },\n        onclienthello: <ref *17> [Function: loadSession] {\n          [length]: 1,\n          [name]: 'loadSession',\n          [prototype]: [Object]\n        },\n        oncertcb: <ref *18> [Function: loadSNI] {\n          [length]: 1,\n          [name]: 'loadSNI',\n          [prototype]: [Object]\n        },\n        onnewsession: <ref *19> [Function: onnewsession] {\n          [length]: 2,\n          [name]: 'onnewsession',\n          [prototype]: [Object]\n        },\n        lastHandshakeTime: 47329,\n        handshakes: 0,\n        onerror: <ref *20> [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        _consumed: true,\n        [Symbol(owner_symbol)]: [Circular *21],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      _requestCert: false,\n      _rejectUnauthorized: true,\n      timeout: 0,\n      parser: HTTPParser {\n        '0': [Function: bound setRequestTimeout] {\n          [length]: 0,\n          [name]: 'bound setRequestTimeout'\n        },\n        '1': <ref *22> [Function: parserOnHeaders] {\n          [length]: 2,\n          [name]: 'parserOnHeaders',\n          [prototype]: [Object]\n        },\n        '2': <ref *23> [Function: parserOnHeadersComplete] {\n          [length]: 9,\n          [name]: 'parserOnHeadersComplete',\n          [prototype]: [Object]\n        },\n        '3': <ref *24> [Function: parserOnBody] {\n          [length]: 3,\n          [name]: 'parserOnBody',\n          [prototype]: [Object]\n        },\n        '4': <ref *25> [Function: parserOnMessageComplete] {\n          [length]: 0,\n          [name]: 'parserOnMessageComplete',\n          [prototype]: [Object]\n        },\n        '5': [Function: bound onParserExecute] {\n          [length]: 1,\n          [name]: 'bound onParserExecute'\n        },\n        '6': [Function: bound onParserTimeout] {\n          [length]: 0,\n          [name]: 'bound onParserTimeout'\n        },\n        _headers: [ [length]: 0 ],\n        _url: '',\n        socket: [Circular *21],\n        incoming: [Circular *26],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        _consumed: true,\n        onIncoming: [Function: bound parserOnIncoming] {\n          [length]: 2,\n          [name]: 'bound parserOnIncoming'\n        },\n        [Symbol(resource_symbol)]: HTTPServerAsyncResource {\n          type: 'HTTPINCOMINGMESSAGE',\n          socket: [Circular *21]\n        }\n      },\n      on: <ref *27> [Function: socketListenerWrap] {\n        [length]: 2,\n        [name]: 'socketListenerWrap',\n        [prototype]: { [constructor]: [Circular *27] }\n      },\n      addListener: <ref *28> [Function: socketListenerWrap] {\n        [length]: 2,\n        [name]: 'socketListenerWrap',\n        [prototype]: { [constructor]: [Circular *28] }\n      },\n      prependListener: <ref *29> [Function: socketListenerWrap] {\n        [length]: 2,\n        [name]: 'socketListenerWrap',\n        [prototype]: { [constructor]: [Circular *29] }\n      },\n      setEncoding: <ref *30> [Function: socketSetEncoding] {\n        [length]: 0,\n        [name]: 'socketSetEncoding',\n        [prototype]: { [constructor]: [Circular *30] }\n      },\n      _paused: false,\n      _httpMessage: [Circular *39],\n      _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 55457 },\n      [Symbol(res)]: TLSWrap {\n        _parent: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Socket],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _parentWrap: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [TCP],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        _secureContext: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        reading: true,\n        onkeylog: <ref *14> [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: <ref *15> [Function: onhandshakestart] {\n          [length]: 1,\n          [name]: 'onhandshakestart',\n          [prototype]: [Object]\n        },\n        onhandshakedone: <ref *16> [Function: onhandshakedone] {\n          [length]: 0,\n          [name]: 'onhandshakedone',\n          [prototype]: [Object]\n        },\n        onclienthello: <ref *17> [Function: loadSession] {\n          [length]: 1,\n          [name]: 'loadSession',\n          [prototype]: [Object]\n        },\n        oncertcb: <ref *18> [Function: loadSNI] {\n          [length]: 1,\n          [name]: 'loadSNI',\n          [prototype]: [Object]\n        },\n        onnewsession: <ref *19> [Function: onnewsession] {\n          [length]: 2,\n          [name]: 'onnewsession',\n          [prototype]: [Object]\n        },\n        lastHandshakeTime: 47329,\n        handshakes: 0,\n        onerror: <ref *20> [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        _consumed: true,\n        [Symbol(owner_symbol)]: [Circular *21],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      [Symbol(verified)]: false,\n      [Symbol(pendingSession)]: null,\n      [Symbol(async_id_symbol)]: 1224,\n      [Symbol(kHandle)]: TLSWrap {\n        _parent: <ref *13> TCP {\n          reading: [Getter/Setter],\n          onconnection: null,\n          [Symbol(owner_symbol)]: [Socket],\n          [owner]: [Getter/Setter],\n          writeQueueSize: [Getter],\n          [fd]: [Getter],\n          [_externalStream]: [Getter],\n          [bytesRead]: [Getter],\n          [bytesWritten]: [Getter],\n          isStreamBase: true\n        },\n        _parentWrap: <ref *10> Socket {\n          connecting: false,\n          _hadError: false,\n          _parent: null,\n          _host: null,\n          _readableState: [ReadableState],\n          [domain]: null,\n          _events: [Object: null prototype],\n          _eventsCount: 3,\n          _maxListeners: undefined,\n          _writableState: [WritableState],\n          allowHalfOpen: false,\n          _sockname: null,\n          _pendingData: null,\n          _pendingEncoding: '',\n          server: [Server],\n          _server: [Server],\n          [Symbol(async_id_symbol)]: 1223,\n          [Symbol(kHandle)]: [TCP],\n          [Symbol(kSetNoDelay)]: false,\n          [Symbol(lastWriteQueueSize)]: 0,\n          [Symbol(timeout)]: null,\n          [Symbol(kBuffer)]: null,\n          [Symbol(kBufferCb)]: null,\n          [Symbol(kBufferGen)]: null,\n          [Symbol(kCapture)]: false,\n          [Symbol(kBytesRead)]: 0,\n          [Symbol(kBytesWritten)]: 0,\n          [_connecting]: [Getter],\n          [pending]: [Getter],\n          [readyState]: [Getter],\n          [bufferSize]: [Getter],\n          bytesRead: [Getter],\n          remoteAddress: [Getter],\n          remoteFamily: [Getter],\n          remotePort: [Getter],\n          localAddress: [Getter],\n          localPort: [Getter],\n          _bytesDispatched: [Getter],\n          bytesWritten: [Getter],\n          [_handle]: [Getter/Setter],\n          [Symbol(kUpdateTimer)]: [Getter],\n          [writable]: [Getter/Setter],\n          [writableHighWaterMark]: [Getter],\n          [writableObjectMode]: [Getter],\n          [writableBuffer]: [Getter],\n          [writableLength]: [Getter],\n          [writableFinished]: [Getter],\n          [writableCorked]: [Getter],\n          [writableEnded]: [Getter],\n          [writableNeedDrain]: [Getter],\n          [destroyed]: [Getter/Setter],\n          [readable]: [Getter/Setter],\n          [readableHighWaterMark]: [Getter],\n          [readableBuffer]: [Getter],\n          [readableFlowing]: [Getter/Setter],\n          [readableLength]: [Getter],\n          [readableObjectMode]: [Getter],\n          [readableEncoding]: [Getter],\n          [readableEnded]: [Getter]\n        },\n        _secureContext: SecureContext {\n          context: SecureContext {},\n          alpnBuffer: <Buffer 08 68 74 74 70 2f 31 2e 31>\n        },\n        reading: true,\n        onkeylog: <ref *14> [Function: onkeylog] {\n          [length]: 1,\n          [name]: 'onkeylog',\n          [prototype]: [Object]\n        },\n        onhandshakestart: <ref *15> [Function: onhandshakestart] {\n          [length]: 1,\n          [name]: 'onhandshakestart',\n          [prototype]: [Object]\n        },\n        onhandshakedone: <ref *16> [Function: onhandshakedone] {\n          [length]: 0,\n          [name]: 'onhandshakedone',\n          [prototype]: [Object]\n        },\n        onclienthello: <ref *17> [Function: loadSession] {\n          [length]: 1,\n          [name]: 'loadSession',\n          [prototype]: [Object]\n        },\n        oncertcb: <ref *18> [Function: loadSNI] {\n          [length]: 1,\n          [name]: 'loadSNI',\n          [prototype]: [Object]\n        },\n        onnewsession: <ref *19> [Function: onnewsession] {\n          [length]: 2,\n          [name]: 'onnewsession',\n          [prototype]: [Object]\n        },\n        lastHandshakeTime: 47329,\n        handshakes: 0,\n        onerror: <ref *20> [Function: onerror] {\n          [length]: 1,\n          [name]: 'onerror',\n          [prototype]: [Object]\n        },\n        _consumed: true,\n        [Symbol(owner_symbol)]: [Circular *21],\n        writeQueueSize: [Getter],\n        [fd]: [Getter],\n        [_externalStream]: [Getter],\n        [bytesRead]: [Getter],\n        [bytesWritten]: [Getter],\n        isStreamBase: true\n      },\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: -1,\n        _idlePrev: null,\n        _idleNext: null,\n        _idleStart: 47329,\n        _onTimeout: null,\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: true,\n        [Symbol(refed)]: false,\n        [Symbol(kHasPrimitive)]: false,\n        [Symbol(asyncId)]: 1225,\n        [Symbol(triggerId)]: 236\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(error-emitted)]: false,\n      [Symbol(RequestTimeout)]: undefined,\n      [_connecting]: [Getter],\n      [pending]: [Getter],\n      [readyState]: [Getter],\n      [bufferSize]: [Getter],\n      bytesRead: [Getter],\n      remoteAddress: [Getter],\n      remoteFamily: [Getter],\n      remotePort: [Getter],\n      localAddress: [Getter],\n      localPort: [Getter],\n      _bytesDispatched: [Getter],\n      bytesWritten: [Getter],\n      [_handle]: [Getter/Setter],\n      [Symbol(kUpdateTimer)]: [Getter],\n      [writable]: [Getter/Setter],\n      [writableHighWaterMark]: [Getter],\n      [writableObjectMode]: [Getter],\n      [writableBuffer]: [Getter],\n      [writableLength]: [Getter],\n      [writableFinished]: [Getter],\n      [writableCorked]: [Getter],\n      [writableEnded]: [Getter],\n      [writableNeedDrain]: [Getter],\n      [destroyed]: [Getter/Setter]\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData] {\n      [length]: 1,\n      [name]: 'bound updateOutgoingData'\n    },\n    req: [Circular *26],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    _startAt: undefined,\n    _startTime: undefined,\n    writeHead: <ref *31> [Function: writeHead] {\n      [length]: 1,\n      [name]: 'writeHead',\n      [prototype]: { [constructor]: [Circular *31] }\n    },\n    __onFinished: <ref *32> [Function: listener] {\n      [length]: 1,\n      [name]: 'listener',\n      [prototype]: { [constructor]: [Circular *32] },\n      queue: [\n        [Function: logRequest] {\n          [length]: 0,\n          [name]: 'logRequest',\n          [prototype]: [Object]\n        },\n        [length]: 1\n      ]\n    },\n    flush: <ref *33> [Function: flush] {\n      [length]: 0,\n      [name]: 'flush',\n      [prototype]: { [constructor]: [Circular *33] }\n    },\n    write: <ref *34> [Function: write] {\n      [length]: 2,\n      [name]: 'write',\n      [prototype]: { [constructor]: [Circular *34] }\n    },\n    end: <ref *35> [Function: end] {\n      [length]: 2,\n      [name]: 'end',\n      [prototype]: { [constructor]: [Circular *35] }\n    },\n    on: <ref *36> [Function: on] {\n      [length]: 2,\n      [name]: 'on',\n      [prototype]: { [constructor]: [Circular *36] }\n    },\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      'content-security-policy': [\n        'Content-Security-Policy',\n        \"default-src https: 'self';style-src https: 'unsafe-inline';script-src https: 'unsafe-inline' 'unsafe-eval';img-src data: 'self'\",\n        [length]: 2\n      ],\n      'x-xss-protection': [ 'X-XSS-Protection', '0', [length]: 2 ],\n      'x-frame-options': [ 'X-Frame-Options', 'SAMEORIGIN', [length]: 2 ],\n      'strict-transport-security': [\n        'Strict-Transport-Security',\n        'max-age=15552000; includeSubDomains',\n        [length]: 2\n      ],\n      'x-content-type-options': [ 'X-Content-Type-Options', 'nosniff', [length]: 2 ],\n      'x-ratelimit-limit': [ 'X-RateLimit-Limit', 100, [length]: 2 ],\n      'x-ratelimit-remaining': [ 'X-RateLimit-Remaining', 93, [length]: 2 ],\n      date: [ 'Date', 'Fri, 23 Apr 2021 18:19:38 GMT', [length]: 2 ],\n      'x-ratelimit-reset': [ 'X-RateLimit-Reset', 1619202842, [length]: 2 ]\n    },\n    statusCode: 200,\n    statusMessage: undefined\n  },\n  _startAt: [ 549174, 592474100, [length]: 2 ],\n  _startTime: 2021-04-23T18:19:38.783Z,\n  _remoteAddress: '::ffff:127.0.0.1',\n  token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NzUsImV4cCI6MTYxOTI4ODM3NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZmI4MjgzYWYtMGU2ZS00MGMzLThkMTEtNjAyMWE4MjI1MTAyIn0.EcXflXBv_04J57ZpydiVErC-iFpWoBEgSq3_TR4POWleM_4BORhh3wbUV0VaCp5cWAsKgAWKZEgHFFnv5Y7hEt9qxlr5IEnWfViD75gAvVkCqu5vkDNkhi6N7I--0lqO6lEJyPIKnmp_MB7jAxavVGQXoCZTczOiaisJ02PGo_4WKTushG2hvp14IsRaUWIk4FlLnEkHjtbCm87tdRU5rq8jagHlgRFxvsNp2T8yNQ5KdbW89tFQw2fIyXoyl8Wta1txUJDPmTcp1VuCgmJIZ-Uw4X-eq8Y4smHAWT08rtyez0LK6ypOI4igVPrU9N5UPQTjyy_UK-9HNgYjn_GcTQ',\n  rateLimit: {\n    limit: 100,\n    current: 7,\n    remaining: 93,\n    resetTime: 2021-04-23T18:34:01.479Z\n  },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    'user-agent': 'vscode-restclient',\n    'content-type': 'application/json',\n    authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTkyMDE5NzUsImV4cCI6MTYxOTI4ODM3NSwiaXNzIjoiaHR0cHM6Ly9hY21lLmNvbS9zaG9wL0p1ZXJnZW5aaW1tZXJtYW5uIiwic3ViIjoiMjAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxIiwianRpIjoiZmI4MjgzYWYtMGU2ZS00MGMzLThkMTEtNjAyMWE4MjI1MTAyIn0.EcXflXBv_04J57ZpydiVErC-iFpWoBEgSq3_TR4POWleM_4BORhh3wbUV0VaCp5cWAsKgAWKZEgHFFnv5Y7hEt9qxlr5IEnWfViD75gAvVkCqu5vkDNkhi6N7I--0lqO6lEJyPIKnmp_MB7jAxavVGQXoCZTczOiaisJ02PGo_4WKTushG2hvp14IsRaUWIk4FlLnEkHjtbCm87tdRU5rq8jagHlgRFxvsNp2T8yNQ5KdbW89tFQw2fIyXoyl8Wta1txUJDPmTcp1VuCgmJIZ-Uw4X-eq8Y4smHAWT08rtyez0LK6ypOI4igVPrU9N5UPQTjyy_UK-9HNgYjn_GcTQ',\n    'accept-encoding': 'gzip, deflate',\n    'content-length': '298',\n    host: 'localhost:3000',\n    connection: 'close'\n  },\n  [Symbol(kHeadersCount)]: 14,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined,\n  protocol: [Getter],\n  secure: [Getter],\n  ip: [Getter],\n  ips: [Getter],\n  subdomains: [Getter],\n  path: [Getter],\n  hostname: [Getter],\n  host: [Getter],\n  fresh: [Getter],\n  stale: [Getter],\n  xhr: [Getter],\n  [connection]: [Getter/Setter],\n  [headers]: [Getter/Setter],\n  [trailers]: [Getter/Setter]\n}","timestamp":"2021-04-23T18:19:39.028Z"}
